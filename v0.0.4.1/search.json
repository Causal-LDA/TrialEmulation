[{"path":"https://causal-lda.github.io/TrialEmulation/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Extending-TrialEmulation.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Extending-TrialEmulation","text":"Due extensive use classes, TrialEmulation can expanded user fit specific needs. document gives quick overview extensible classes, current implementations requirements adding child classes. vignette describes two areas new functionality implemented: regression model fitting data storage.","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Extending-TrialEmulation.html","id":"classes-and-slots","dir":"Articles","previous_headings":"Model fitters","what":"Classes and Slots","title":"Extending-TrialEmulation","text":"Three classes required implementing model fitter: @save_path path directory saving models @model: list containing fitted model objects @summary: list data frames containing summary fitted model (tidy, glance) saved file (save_path) @label: label supplied fitting function describe model @summary: list data frames containing summary fitted model (tidy, glance) saved file (save_path) @fitted: fitted values (predicted probabilities) Currently one model fitter class implemented: @save_path path directory saving models @model: list containing model, result glm(), vcov, robust covariance matrix @summary: list data frames tidy, glance save_path","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Extending-TrialEmulation.html","id":"user-constructor","dir":"Articles","previous_headings":"Model fitters","what":"User Constructor","title":"Extending-TrialEmulation","text":"user constructor required specify model fitter type set_censor_weight_model(), set_switch_weight_model() set_outcome_model(). specified independently. user constructor arguments required model fitting (hyper-)parameters well path saving model objects. See stats_glm_logit() simple implementation.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Extending-TrialEmulation.html","id":"methods","dir":"Articles","previous_headings":"Model fitters","what":"Methods","title":"Extending-TrialEmulation","text":"3 generic methods required implementing new model, fit_weights_model(), fit_outcome_model(), predict().","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Extending-TrialEmulation.html","id":"fit_weights_model","dir":"Articles","previous_headings":"Model fitters > Methods","what":"fit_weights_model","title":"Extending-TrialEmulation","text":"method uses model object fit model probability censoring returns fitted probabilities later combined used construct inverse probability censoring weights. method also save fitted model object disk save path specified. object: te_model_fitter object data: data.frame containing outcome (censoring indicator) covariate data formula: model formula label: character label describing model attached result Returns: te_weights_fitted object containing summary fitted model fitted probabilities.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Extending-TrialEmulation.html","id":"fit_outcome_model","dir":"Articles","previous_headings":"Model fitters > Methods","what":"fit_outcome_model","title":"Extending-TrialEmulation","text":"method fits outcome model. object, data, formula, weights = NULL - Arguments - object: te_model_fitter object - data: data.frame containing outcome covariate data - formula: model formula - weights: numeric vector containing weights observations data - Returns: fitted model object inheriting te_outcome_fitted child class corresponding fitter model class used. object contains summary results well raw result model.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Extending-TrialEmulation.html","id":"predict","dir":"Articles","previous_headings":"Model fitters > Methods","what":"predict","title":"Extending-TrialEmulation","text":"method calculates marginal survival cumulative incidences based outcome model object. method take baseline covariates construct data assigned_treatment = 0 1 well follow times given predict_times. object: fitted model object inheriting te_outcome_fitted, eg te_stats_glm_logit_outcome_fitted newdata: data.frame containing baseline covariates predict probabilities predict_times: contiguous numeric vector times calculate predictions type: string indicating type prediction calculate: \"cum_inc\" \"survival\" conf_int: logical indicating whether calculate 95% confidence interval samples: integer giving number iterations used calculate confidence interval using sampling approach Returns: list containing predicted values assigned treatment 0, 1 difference .","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Extending-TrialEmulation.html","id":"data-stores","dir":"Articles","previous_headings":"","what":"Data Stores","title":"Extending-TrialEmulation","text":"sequence target trials dataset much larger input longitudinal data. original input data already large compared available system memory, alternative data storage mechanism might desirable. Currently package offers data.table, csv, duckdb. describe implementation “data stores”. order add new data store, child class must defined inherits class te_datastore. must also add least new constructor save_to_xxx() well new methods save_expanded_data() read_expanded_data(). new method sample_expanded_data() optional (e.g. case sampling required implemented method te_datastore sufficient, see sample_expanded_data), necessary large datasets.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Extending-TrialEmulation.html","id":"classes-and-slots-1","dir":"Articles","previous_headings":"Data Stores","what":"Classes and Slots","title":"Extending-TrialEmulation","text":"@N: Number observations Currently following Data Store child classes available saving expanded data: @path: Path temp folder containing csv files @files: Paths available files @template: empty data.frame, used template reading data preserve types attributes @N: inherited te_datastore @data: data.table containing expanded data @N: inherited te_datastore @path: Path DuckDB file @table: table name @con: duckdb connection object, used query write database @N: inherited te_datastore","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Extending-TrialEmulation.html","id":"user-constructor-1","dir":"Articles","previous_headings":"Data Stores","what":"User Constructor","title":"Extending-TrialEmulation","text":"user constructor function used set_expansion_options() replace te_datastore object trial_sequence@expansion@datastore object desired child class. user constructor allows user specify parameters required data store, file path, username/password. Saving data happens later calling expand_trials() internally calls corresponding save_expanded_data() method. See following currently available constructor functions insights: save_to_csv(), save_to_datatable(), save_to_duckdb()","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Extending-TrialEmulation.html","id":"methods-1","dir":"Articles","previous_headings":"Data Stores","what":"Methods","title":"Extending-TrialEmulation","text":"four generic methods defined te_datastore class.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Extending-TrialEmulation.html","id":"show","dir":"Articles","previous_headings":"Data Stores > Methods","what":"show","title":"Extending-TrialEmulation","text":"method prints simple summary extract data. Note: Since child classes differ quite significantly , every child class show method. show method te_datastore parent class.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Extending-TrialEmulation.html","id":"save_expanded_data","dir":"Articles","previous_headings":"Data Stores > Methods","what":"save_expanded_data","title":"Extending-TrialEmulation","text":"method defines expanded data gets saved. Method chosen based te_datastore child class. gets called internally expand_trials(). large datasets save_expanded_data() may called multiple times, method must able “append” data way. object: te_datastore child class object data: data.table saved data store Returns: modified te_datastore child class object","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Extending-TrialEmulation.html","id":"read_expanded_data","dir":"Articles","previous_headings":"Data Stores > Methods","what":"read_expanded_data","title":"Extending-TrialEmulation","text":"method used reading expanded data memory. data can subset period subset condition. gets called internally load_expanded_data() p_control isn’t specified, sample_expanded_data() specific sampling method exists te_datastore child class. object: te_datastore child class object period: “integerish” vector select trial periods, missing defaults NULL selects available trial periods subset_condition: subset condition string, missing defaults NULL skips subsetting Returns: data.table object","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Extending-TrialEmulation.html","id":"sample_expanded_data","dir":"Articles","previous_headings":"Data Stores > Methods","what":"sample_expanded_data","title":"Extending-TrialEmulation","text":"method used reading sampling expanded data. data can subset period subset condition plus can sampled using p_control argument. gets called internally load_expanded_data() p_control specified. method child class exists, method parent class used instead read subset data using read_expanded_data(). sampling happens bulk, might cause problems large datasets. speed memory reasons might necessary implement efficient method new child class. object: te_datastore child class object p_control: numeric value 0 1, probability sample control value period: integerish vector select trial periods, missing defaults NULL selects available trial periods subset_condition: subset condition string, missing defaults NULL skips subsetting seed: seed used sampling, missing sampling randomised Returns: data.table object","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Getting-Started.html","id":"required-data","dir":"Articles","previous_headings":"","what":"Required Data","title":"Getting-Started","text":"get started longitudinal dataset must created containing: time period patient identifier treatment indicator outcome indicator censoring indicator eligibility indicator trial starting time period covariates relating treatment, outcome, informative censoring used models weights outcome example data set included demonstrate format:","code":"library(TrialEmulation) # Prepare the example data data(\"trial_example\") # Set columns to factors as necessary trial_example$catvarA <- as.factor(trial_example$catvarA) trial_example$catvarB <- as.factor(trial_example$catvarB)  head(trial_example) #>    id eligible period outcome treatment catvarA catvarB catvarC nvarA nvarB #> 1 202        1    310       0         0       0       2       0     0    35 #> 2 202        1    311       0         1       0       2       1     0    42 #> 3 202        1    312       0         1       0       2       1     0    48 #> 4 202        1    313       0         1       0       2       1     0    43 #> 5 202        0    314       0         1       0       2       1     0    45 #> 6 202        0    315       0         1       0       2       1     0    48 #>   nvarC #> 1    74 #> 2    74 #> 3    74 #> 4    75 #> 5    75 #> 6    75"},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Getting-Started.html","id":"initiators","dir":"Articles","previous_headings":"","what":"All-in-one analysis","title":"Getting-Started","text":"--one function initators() steps one function call. similar INITIATORS SAS macro. Call initiators() function run complete analysis: default, returns final glm model object results using sandwich estimator. Tidy summaries robust models available. Also sandwich robust variance-covariance matrix.","code":"result <- initiators(   data = trial_example,   id = \"id\",   period = \"period\",   eligible = \"eligible\",   treatment = \"treatment\",   estimand_type = \"ITT\",   outcome = \"outcome\",   model_var = \"assigned_treatment\",   outcome_cov = c(\"catvarA\", \"catvarB\", \"nvarA\", \"nvarB\", \"nvarC\"),   use_censor_weights = FALSE ) #> Starting data manipulation #> Starting data extension #> Summary of extended data: #> Number of observations: 1939053 #> ------------------------------------------------------------ #> Preparing for model fitting #> ------------------------------------------------------------ #> Fitting outcome model #>  #> Call: #> glm(formula = outcome ~ assigned_treatment + trial_period + I(trial_period^2) +  #>     followup_time + I(followup_time^2) + catvarA + catvarB +  #>     nvarA + nvarB + nvarC, family = binomial(link = \"logit\"),  #>     data = data, weights = w) #>  #> Coefficients: #>                     Estimate Std. Error z value Pr(>|z|)     #> (Intercept)        -3.21e+00   1.41e-01  -22.76  < 2e-16 *** #> assigned_treatment -2.73e-01   4.66e-02   -5.86  4.6e-09 *** #> trial_period        1.73e-03   6.01e-04    2.87  0.00404 **  #> I(trial_period^2)   1.27e-06   1.48e-06    0.86  0.39199     #> followup_time       2.85e-03   5.21e-04    5.48  4.2e-08 *** #> I(followup_time^2) -6.90e-06   2.27e-06   -3.04  0.00233 **  #> catvarA1            2.98e-01   2.80e-02   10.63  < 2e-16 *** #> catvarA2            1.52e-01   3.86e-02    3.95  7.9e-05 *** #> catvarA3           -1.11e+01   3.48e+01   -0.32  0.75104     #> catvarA7            4.13e-01   3.75e-02   11.01  < 2e-16 *** #> catvarB1           -4.05e-01   1.12e-01   -3.63  0.00029 *** #> catvarB2           -4.31e-01   1.15e-01   -3.74  0.00019 *** #> catvarB3           -2.44e+00   3.35e-01   -7.28  3.4e-13 *** #> catvarB7           -7.16e-01   1.12e-01   -6.37  1.8e-10 *** #> nvarA              -8.55e-02   7.67e-03  -11.15  < 2e-16 *** #> nvarB               5.35e-03   3.16e-04   16.91  < 2e-16 *** #> nvarC              -4.20e-02   8.76e-04  -47.97  < 2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 111015  on 1939052  degrees of freedom #> Residual deviance: 107649  on 1939036  degrees of freedom #> AIC: 107683 #>  #> Number of Fisher Scoring iterations: 15 #> ------------------------------------------------------------ #> Calculating robust variance #> Summary with robust standard error: #>                 names  estimate robust_se      2.5%     97.5%       z  p_value #> 1         (Intercept) -3.21e+00  7.03e-01 -4.59e+00 -1.84e+00  -4.575 4.76e-06 #> 2  assigned_treatment -2.73e-01  3.10e-01 -8.80e-01  3.35e-01  -0.880 3.79e-01 #> 3        trial_period  1.73e-03  4.07e-03 -6.25e-03  9.70e-03   0.424 6.71e-01 #> 4   I(trial_period^2)  1.27e-06  9.52e-06 -1.74e-05  1.99e-05   0.133 8.94e-01 #> 5       followup_time  2.85e-03  3.40e-03 -3.81e-03  9.52e-03   0.840 4.01e-01 #> 6  I(followup_time^2) -6.90e-06  1.62e-05 -3.87e-05  2.49e-05  -0.426 6.70e-01 #> 7            catvarA1  2.98e-01  1.88e-01 -6.99e-02  6.66e-01   1.587 1.12e-01 #> 8            catvarA2  1.52e-01  2.84e-01 -4.03e-01  7.08e-01   0.537 5.91e-01 #> 9            catvarA3 -1.11e+01  9.45e-01 -1.29e+01 -9.20e+00 -11.697 0.00e+00 #> 10           catvarA7  4.13e-01  2.17e-01 -1.32e-02  8.39e-01   1.899 5.75e-02 #> 11           catvarB1 -4.05e-01  3.06e-01 -1.00e+00  1.94e-01  -1.325 1.85e-01 #> 12           catvarB2 -4.31e-01  3.64e-01 -1.14e+00  2.82e-01  -1.186 2.36e-01 #> 13           catvarB3 -2.44e+00  9.25e-01 -4.25e+00 -6.27e-01  -2.637 8.36e-03 #> 14           catvarB7 -7.16e-01  3.04e-01 -1.31e+00 -1.20e-01  -2.354 1.86e-02 #> 15              nvarA -8.55e-02  4.49e-02 -1.74e-01  2.55e-03  -1.903 5.70e-02 #> 16              nvarB  5.35e-03  2.22e-03  1.00e-03  9.70e-03   2.412 1.59e-02 #> 17              nvarC -4.20e-02  6.89e-03 -5.55e-02 -2.85e-02  -6.102 1.05e-09 #> ------------------------------------------------------------ summary(result) #> Trial Emulation Outcome Model #>  #> Outcome model formula: #> outcome ~ assigned_treatment + trial_period + I(trial_period^2) +  #>     followup_time + I(followup_time^2) + catvarA + catvarB +  #>     nvarA + nvarB + nvarC #>  #> Coefficent summary (robust): #>               names  estimate robust_se      2.5%     97.5%       z p_value #>         (Intercept) -3.21e+00  7.03e-01 -4.59e+00 -1.84e+00  -4.575   5e-06 #>  assigned_treatment -2.73e-01  3.10e-01 -8.80e-01  3.35e-01  -0.880   0.379 #>        trial_period  1.73e-03  4.07e-03 -6.25e-03  9.70e-03   0.424   0.671 #>   I(trial_period^2)  1.27e-06  9.52e-06 -1.74e-05  1.99e-05   0.133   0.894 #>       followup_time  2.85e-03  3.40e-03 -3.81e-03  9.52e-03   0.840   0.401 #>  I(followup_time^2) -6.90e-06  1.62e-05 -3.87e-05  2.49e-05  -0.426   0.670 #>            catvarA1  2.98e-01  1.88e-01 -6.99e-02  6.66e-01   1.587   0.112 #>            catvarA2  1.52e-01  2.84e-01 -4.03e-01  7.08e-01   0.537   0.591 #>            catvarA3 -1.11e+01  9.45e-01 -1.29e+01 -9.20e+00 -11.697  <2e-16 #>            catvarA7  4.13e-01  2.17e-01 -1.32e-02  8.39e-01   1.899   0.058 #>            catvarB1 -4.05e-01  3.06e-01 -1.00e+00  1.94e-01  -1.325   0.185 #>            catvarB2 -4.31e-01  3.64e-01 -1.14e+00  2.82e-01  -1.186   0.236 #>            catvarB3 -2.44e+00  9.25e-01 -4.25e+00 -6.27e-01  -2.637   0.008 #>            catvarB7 -7.16e-01  3.04e-01 -1.31e+00 -1.20e-01  -2.354   0.019 #>               nvarA -8.55e-02  4.49e-02 -1.74e-01  2.55e-03  -1.903   0.057 #>               nvarB  5.35e-03  2.22e-03  1.00e-03  9.70e-03   2.412   0.016 #>               nvarC -4.20e-02  6.89e-03 -5.55e-02 -2.85e-02  -6.102   1e-09 #>  #> result$model contains the fitted glm model object. #> result$robust$matrix contains the full robust covariance matrix. summary(result$model) #>  #> Call: #> glm(formula = outcome ~ assigned_treatment + trial_period + I(trial_period^2) +  #>     followup_time + I(followup_time^2) + catvarA + catvarB +  #>     nvarA + nvarB + nvarC, family = binomial(link = \"logit\"),  #>     data = data, weights = w) #>  #> Coefficients: #>                     Estimate Std. Error z value Pr(>|z|)     #> (Intercept)        -3.21e+00   1.41e-01  -22.76  < 2e-16 *** #> assigned_treatment -2.73e-01   4.66e-02   -5.86  4.6e-09 *** #> trial_period        1.73e-03   6.01e-04    2.87  0.00404 **  #> I(trial_period^2)   1.27e-06   1.48e-06    0.86  0.39199     #> followup_time       2.85e-03   5.21e-04    5.48  4.2e-08 *** #> I(followup_time^2) -6.90e-06   2.27e-06   -3.04  0.00233 **  #> catvarA1            2.98e-01   2.80e-02   10.63  < 2e-16 *** #> catvarA2            1.52e-01   3.86e-02    3.95  7.9e-05 *** #> catvarA3           -1.11e+01   3.48e+01   -0.32  0.75104     #> catvarA7            4.13e-01   3.75e-02   11.01  < 2e-16 *** #> catvarB1           -4.05e-01   1.12e-01   -3.63  0.00029 *** #> catvarB2           -4.31e-01   1.15e-01   -3.74  0.00019 *** #> catvarB3           -2.44e+00   3.35e-01   -7.28  3.4e-13 *** #> catvarB7           -7.16e-01   1.12e-01   -6.37  1.8e-10 *** #> nvarA              -8.55e-02   7.67e-03  -11.15  < 2e-16 *** #> nvarB               5.35e-03   3.16e-04   16.91  < 2e-16 *** #> nvarC              -4.20e-02   8.76e-04  -47.97  < 2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 111015  on 1939052  degrees of freedom #> Residual deviance: 107649  on 1939036  degrees of freedom #> AIC: 107683 #>  #> Number of Fisher Scoring iterations: 15 print(result$robust$summary) #>                 names  estimate robust_se      2.5%     97.5%       z  p_value #> 1         (Intercept) -3.21e+00  7.03e-01 -4.59e+00 -1.84e+00  -4.575 4.76e-06 #> 2  assigned_treatment -2.73e-01  3.10e-01 -8.80e-01  3.35e-01  -0.880 3.79e-01 #> 3        trial_period  1.73e-03  4.07e-03 -6.25e-03  9.70e-03   0.424 6.71e-01 #> 4   I(trial_period^2)  1.27e-06  9.52e-06 -1.74e-05  1.99e-05   0.133 8.94e-01 #> 5       followup_time  2.85e-03  3.40e-03 -3.81e-03  9.52e-03   0.840 4.01e-01 #> 6  I(followup_time^2) -6.90e-06  1.62e-05 -3.87e-05  2.49e-05  -0.426 6.70e-01 #> 7            catvarA1  2.98e-01  1.88e-01 -6.99e-02  6.66e-01   1.587 1.12e-01 #> 8            catvarA2  1.52e-01  2.84e-01 -4.03e-01  7.08e-01   0.537 5.91e-01 #> 9            catvarA3 -1.11e+01  9.45e-01 -1.29e+01 -9.20e+00 -11.697 0.00e+00 #> 10           catvarA7  4.13e-01  2.17e-01 -1.32e-02  8.39e-01   1.899 5.75e-02 #> 11           catvarB1 -4.05e-01  3.06e-01 -1.00e+00  1.94e-01  -1.325 1.85e-01 #> 12           catvarB2 -4.31e-01  3.64e-01 -1.14e+00  2.82e-01  -1.186 2.36e-01 #> 13           catvarB3 -2.44e+00  9.25e-01 -4.25e+00 -6.27e-01  -2.637 8.36e-03 #> 14           catvarB7 -7.16e-01  3.04e-01 -1.31e+00 -1.20e-01  -2.354 1.86e-02 #> 15              nvarA -8.55e-02  4.49e-02 -1.74e-01  2.55e-03  -1.903 5.70e-02 #> 16              nvarB  5.35e-03  2.22e-03  1.00e-03  9.70e-03   2.412 1.59e-02 #> 17              nvarC -4.20e-02  6.89e-03 -5.55e-02 -2.85e-02  -6.102 1.05e-09 # only print the first columns head(result$robust$matrix, c(17, 4)) #>                    (Intercept) assigned_treatment trial_period #> (Intercept)           4.94e-01           1.63e-02    -1.67e-03 #> assigned_treatment    1.63e-02           9.61e-02     3.73e-05 #> trial_period         -1.67e-03           3.73e-05     1.66e-05 #> I(trial_period^2)     2.58e-06          -2.87e-07    -3.58e-08 #> followup_time        -1.68e-04          -5.04e-05    -2.87e-06 #> I(followup_time^2)   -1.05e-06           1.82e-07     1.74e-08 #> catvarA1             -3.57e-03           4.86e-03    -6.88e-05 #> catvarA2             -1.32e-02           1.01e-02     3.44e-05 #> catvarA3             -1.47e-02           7.06e-03    -3.68e-05 #> catvarA7             -3.77e-02           1.55e-03     2.56e-04 #> catvarB1             -8.53e-02          -2.10e-02     3.82e-05 #> catvarB2             -8.70e-02          -2.41e-02     3.00e-05 #> catvarB3             -1.32e-01          -2.62e-02     2.62e-04 #> catvarB7             -1.19e-01          -2.02e-02     6.13e-06 #> nvarA                -2.51e-03          -1.07e-03     1.33e-06 #> nvarB                 1.08e-04           7.11e-05    -4.79e-07 #> nvarC                -2.66e-03           3.10e-05     2.05e-07 #>                    I(trial_period^2) #> (Intercept)                 2.58e-06 #> assigned_treatment         -2.87e-07 #> trial_period               -3.58e-08 #> I(trial_period^2)           9.07e-11 #> followup_time               9.13e-09 #> I(followup_time^2)         -4.23e-11 #> catvarA1                    1.80e-07 #> catvarA2                   -2.61e-08 #> catvarA3                    1.58e-07 #> catvarA7                   -4.31e-07 #> catvarB1                   -6.24e-09 #> catvarB2                    2.11e-08 #> catvarB3                   -2.47e-07 #> catvarB7                    3.97e-07 #> nvarA                       1.18e-08 #> nvarB                      -1.31e-09 #> nvarC                      -8.41e-10"},{"path":"https://causal-lda.github.io/TrialEmulation/articles/Getting-Started.html","id":"flexible","dir":"Articles","previous_headings":"","what":"Flexible Analysis","title":"Getting-Started","text":"gain complete control analysis inspect intermediate objects, can useful run data preparation modelling steps separately. also allows processing large data sets, data preparation chunks sampling expanded trial data. Use summary get overview result. information weighting models, can inspect individually save_weight_models = TRUE, full model objects saved working_dir, can inspect data used models investigate well models fit.  also see expanded trial files: csv files contains data trial starting period _i. create manageable dataset final analysis can sample trials. sample 10% patients without event follow-time trial. observations events included. proceeding modelling, possible manipulate derive new variables adjust factor levels data.frame. can also specify transformations formula outcome_cov, include_followup_time include_trial_period, ~ ns(trial_period) ~ (nvarA^2) + nvarC > 50 + catvarA:nvarC. also possible specify formulas trial_msm() include, example, splines ns(). Now can fit model trial_msm() function. Since sampled data, make use use_sample_weights option get correct survival estimates. result type previous result simple initiators function, containing glm object sandwich results. can also use object predict cumulative incidence curves use treatment comparisons. use patients first trial target population. get data right format, can use data_template returned data_preparation(). predict function returns list 3 data frames: predictions assigned treatment 0, assigned treatment 1 difference. possible change type predicted values, either cumulative incidence survival.","code":"# for the purposes of the vignette, we use a temporary directory, however it may be useful to use a permanent # location in order to inspect the outputs later working_dir <- file.path(tempdir(TRUE), \"trial_emu\") if (!dir.exists(working_dir)) dir.create(working_dir) prep_data <- data_preparation(   data = trial_example,   id = \"id\",   period = \"period\",   eligible = \"eligible\",   treatment = \"treatment\",   outcome = \"outcome\",   outcome_cov = ~ catvarA + catvarB + nvarA + nvarB + nvarC,   data_dir = working_dir,   save_weight_models = TRUE,   estimand_type = \"PP\",   pool_cense = \"none\",   use_censor_weights = FALSE,   chunk_size = 500,   separate_files = TRUE,   switch_n_cov = ~ nvarA + nvarB,   quiet = TRUE ) summary(prep_data) #> Expanded Trial Emulation data #>  #> Expanded data saved in 396 csv files: #>   1:   /tmp/RtmpFdkqGG/trial_emu/trial_1.csv #>   2:   /tmp/RtmpFdkqGG/trial_emu/trial_2.csv #>   3:   /tmp/RtmpFdkqGG/trial_emu/trial_3.csv #>  ---                                         #> 394: /tmp/RtmpFdkqGG/trial_emu/trial_394.csv #> 395: /tmp/RtmpFdkqGG/trial_emu/trial_395.csv #> 396: /tmp/RtmpFdkqGG/trial_emu/trial_396.csv #>  #>  #> Number of observations in expanded data: 963883  #> First trial period: 1  #> Last trial period: 396  #>  #> ------------------------------------------------------------  #> Weight models #> ------------- #>  #> Treatment switch models #> ----------------------- #>  #> switch_models$switch_d0: #>  P(treatment = 1 | previous treatment = 0) for denominator  #>  #>         term estimate std.error statistic p.value #>  (Intercept)    -3.84    0.0479     -80.3       0 #>  #> ------------------------------------------------------------  #> switch_models$switch_n0: #>  P(treatment = 1 | previous treatment = 0) for numerator  #>  #>         term estimate std.error statistic p.value #>  (Intercept) -3.82037    0.0679   -56.244   0.000 #>        nvarA  0.00411    0.0294     0.140   0.889 #>        nvarB -0.00066    0.0013    -0.509   0.611 #>  #> ------------------------------------------------------------  #> switch_models$switch_d1: #>  P(treatment = 1 | previous treatment = 1) for denominator  #>  #>         term estimate std.error statistic p.value #>  (Intercept)     4.38    0.0682      64.2       0 #>  #> ------------------------------------------------------------  #> switch_models$switch_n1: #>  P(treatment = 1 | previous treatment = 1) for numerator  #>  #>         term estimate std.error statistic   p.value #>  (Intercept)  4.02225   0.11676   34.4500 4.50e-260 #>        nvarA -0.00226   0.04403   -0.0514  9.59e-01 #>        nvarB  0.00758   0.00231    3.2885  1.01e-03 #>  #> ------------------------------------------------------------ prep_data$switch_models$switch_n0 #> P(treatment = 1 | previous treatment = 0) for numerator  #>  #>         term estimate std.error statistic p.value #>  (Intercept) -3.82037    0.0679   -56.244   0.000 #>        nvarA  0.00411    0.0294     0.140   0.889 #>        nvarB -0.00066    0.0013    -0.509   0.611 #>  #>  null.deviance df.null logLik  AIC  BIC deviance df.residual  nobs #>           4330   21263  -2165 4335 4359     4329       21261 21264 #>  #> Object saved at \"/tmp/RtmpFdkqGG/trial_emu/weight_model_switch_n0.rds\" list.files(working_dir, \"*.rds\") #> [1] \"weight_model_switch_d0.rds\" \"weight_model_switch_d1.rds\" #> [3] \"weight_model_switch_n0.rds\" \"weight_model_switch_n1.rds\"  # The path is stored in the saved object switch_n0 <- readRDS(prep_data$switch_models$switch_n0$path) summary(switch_n0) #>  #> Call: #> glm(formula = treatment ~ nvarA + nvarB, family = binomial(link = \"logit\"),  #>     data = data) #>  #> Coefficients: #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept) -3.82037    0.06792  -56.24   <2e-16 *** #> nvarA        0.00411    0.02943    0.14     0.89     #> nvarB       -0.00066    0.00130   -0.51     0.61     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 4329.7  on 21263  degrees of freedom #> Residual deviance: 4329.4  on 21261  degrees of freedom #> AIC: 4335 #>  #> Number of Fisher Scoring iterations: 6 hist(switch_n0$fitted.values, main = \"Histogram of weights from model switch_n0\") head(prep_data$data) #> [1] \"/tmp/RtmpFdkqGG/trial_emu/trial_1.csv\" #> [2] \"/tmp/RtmpFdkqGG/trial_emu/trial_2.csv\" #> [3] \"/tmp/RtmpFdkqGG/trial_emu/trial_3.csv\" #> [4] \"/tmp/RtmpFdkqGG/trial_emu/trial_4.csv\" #> [5] \"/tmp/RtmpFdkqGG/trial_emu/trial_5.csv\" #> [6] \"/tmp/RtmpFdkqGG/trial_emu/trial_6.csv\" sampled_data <- case_control_sampling_trials(prep_data, p_control = 0.1) str(sampled_data) #> Classes 'data.table' and 'data.frame':   99926 obs. of  13 variables: #>  $ id                : int  176 358 165 476 176 475 54 423 176 476 ... #>  $ trial_period      : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ followup_time     : int  1 1 2 3 3 5 6 7 7 7 ... #>  $ outcome           : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ weight            : num  1 1 0.999 0.999 0.999 ... #>  $ treatment         : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ catvarA           : Factor w/ 5 levels \"0\",\"1\",\"2\",\"3\",..: 5 5 5 5 5 5 5 5 5 5 ... #>  $ catvarB           : Factor w/ 5 levels \"0\",\"1\",\"2\",\"3\",..: 5 5 5 5 5 5 5 5 5 5 ... #>  $ nvarA             : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ nvarB             : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ nvarC             : int  45 47 70 49 45 69 49 56 45 49 ... #>  $ assigned_treatment: int  0 0 0 0 0 0 0 0 0 0 ... #>  $ sample_weight     : num  10 10 10 10 10 10 10 10 10 10 ... #>  - attr(*, \".internal.selfref\")=<externalptr> model_result <- trial_msm(   data = sampled_data,   outcome_cov = c(\"catvarA\", \"catvarB\", \"nvarA\", \"nvarB\", \"nvarC\"),   model_var = \"assigned_treatment\",   glm_function = \"glm\",   use_sample_weights = TRUE ) #> Preparing for model fitting #> ------------------------------------------------------------ #> Fitting outcome model #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #>  #> Call: #> glm(formula = outcome ~ assigned_treatment + trial_period + I(trial_period^2) +  #>     followup_time + I(followup_time^2) + catvarA + catvarB +  #>     nvarA + nvarB + nvarC, family = binomial(link = \"logit\"),  #>     data = data, weights = w) #>  #> Coefficients: #>                     Estimate Std. Error z value Pr(>|z|)     #> (Intercept)        -2.35e+00   2.26e-01  -10.39  < 2e-16 *** #> assigned_treatment -4.20e-01   5.37e-02   -7.83  5.0e-15 *** #> trial_period       -2.09e-03   8.44e-04   -2.48    0.013 *   #> I(trial_period^2)   1.04e-05   1.91e-06    5.48  4.3e-08 *** #> followup_time       6.19e-03   1.21e-03    5.11  3.3e-07 *** #> I(followup_time^2) -4.24e-05   8.96e-06   -4.73  2.3e-06 *** #> catvarA1            3.35e-01   4.03e-02    8.30  < 2e-16 *** #> catvarA2            4.42e-01   5.37e-02    8.23  < 2e-16 *** #> catvarA3           -1.02e+01   5.62e+01   -0.18    0.856     #> catvarA7            3.39e-01   6.38e-02    5.31  1.1e-07 *** #> catvarB1           -4.41e-01   1.85e-01   -2.38    0.017 *   #> catvarB2           -1.82e-01   1.89e-01   -0.96    0.336     #> catvarB3           -2.45e+00   3.66e-01   -6.69  2.2e-11 *** #> catvarB7           -9.16e-01   1.88e-01   -4.87  1.1e-06 *** #> nvarA              -2.09e-02   8.80e-03   -2.37    0.018 *   #> nvarB               3.21e-03   3.88e-04    8.28  < 2e-16 *** #> nvarC              -5.09e-02   1.23e-03  -41.21  < 2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 53204  on 99925  degrees of freedom #> Residual deviance: 50686  on 99909  degrees of freedom #> AIC: 50648 #>  #> Number of Fisher Scoring iterations: 13 #> ------------------------------------------------------------ #> Calculating robust variance #> Summary with robust standard error: #>                 names  estimate robust_se      2.5%     97.5%       z  p_value #> 1         (Intercept) -2.35e+00  1.04e+00 -4.39e+00 -3.11e-01  -2.259 2.39e-02 #> 2  assigned_treatment -4.20e-01  4.23e-01 -1.25e+00  4.09e-01  -0.993 3.21e-01 #> 3        trial_period -2.09e-03  4.98e-03 -1.19e-02  7.67e-03  -0.420 6.74e-01 #> 4   I(trial_period^2)  1.04e-05  1.10e-05 -1.12e-05  3.21e-05   0.946 3.44e-01 #> 5       followup_time  6.19e-03  5.77e-03 -5.12e-03  1.75e-02   1.073 2.83e-01 #> 6  I(followup_time^2) -4.24e-05  5.15e-05 -1.43e-04  5.85e-05  -0.823 4.10e-01 #> 7            catvarA1  3.35e-01  2.63e-01 -1.80e-01  8.49e-01   1.274 2.03e-01 #> 8            catvarA2  4.42e-01  3.64e-01 -2.72e-01  1.15e+00   1.214 2.25e-01 #> 9            catvarA3 -1.02e+01  8.09e-01 -1.18e+01 -8.64e+00 -12.641 0.00e+00 #> 10           catvarA7  3.39e-01  3.49e-01 -3.46e-01  1.02e+00   0.970 3.32e-01 #> 11           catvarB1 -4.41e-01  6.49e-01 -1.71e+00  8.32e-01  -0.679 4.97e-01 #> 12           catvarB2 -1.82e-01  6.89e-01 -1.53e+00  1.17e+00  -0.264 7.92e-01 #> 13           catvarB3 -2.45e+00  1.11e+00 -4.63e+00 -2.77e-01  -2.209 2.72e-02 #> 14           catvarB7 -9.16e-01  6.66e-01 -2.22e+00  3.89e-01  -1.376 1.69e-01 #> 15              nvarA -2.09e-02  5.51e-02 -1.29e-01  8.71e-02  -0.379 7.05e-01 #> 16              nvarB  3.21e-03  2.49e-03 -1.66e-03  8.08e-03   1.292 1.96e-01 #> 17              nvarC -5.09e-02  9.24e-03 -6.90e-02 -3.28e-02  -5.506 3.66e-08 #> ------------------------------------------------------------ summary(model_result) #> Trial Emulation Outcome Model #>  #> Outcome model formula: #> outcome ~ assigned_treatment + trial_period + I(trial_period^2) +  #>     followup_time + I(followup_time^2) + catvarA + catvarB +  #>     nvarA + nvarB + nvarC #>  #> Coefficent summary (robust): #>               names  estimate robust_se      2.5%     97.5%       z p_value #>         (Intercept) -2.35e+00  1.04e+00 -4.39e+00 -3.11e-01  -2.259    0.02 #>  assigned_treatment -4.20e-01  4.23e-01 -1.25e+00  4.09e-01  -0.993    0.32 #>        trial_period -2.09e-03  4.98e-03 -1.19e-02  7.67e-03  -0.420    0.67 #>   I(trial_period^2)  1.04e-05  1.10e-05 -1.12e-05  3.21e-05   0.946    0.34 #>       followup_time  6.19e-03  5.77e-03 -5.12e-03  1.75e-02   1.073    0.28 #>  I(followup_time^2) -4.24e-05  5.15e-05 -1.43e-04  5.85e-05  -0.823    0.41 #>            catvarA1  3.35e-01  2.63e-01 -1.80e-01  8.49e-01   1.274    0.20 #>            catvarA2  4.42e-01  3.64e-01 -2.72e-01  1.15e+00   1.214    0.22 #>            catvarA3 -1.02e+01  8.09e-01 -1.18e+01 -8.64e+00 -12.641  <2e-16 #>            catvarA7  3.39e-01  3.49e-01 -3.46e-01  1.02e+00   0.970    0.33 #>            catvarB1 -4.41e-01  6.49e-01 -1.71e+00  8.32e-01  -0.679    0.50 #>            catvarB2 -1.82e-01  6.89e-01 -1.53e+00  1.17e+00  -0.264    0.79 #>            catvarB3 -2.45e+00  1.11e+00 -4.63e+00 -2.77e-01  -2.209    0.03 #>            catvarB7 -9.16e-01  6.66e-01 -2.22e+00  3.89e-01  -1.376    0.17 #>               nvarA -2.09e-02  5.51e-02 -1.29e-01  8.71e-02  -0.379    0.70 #>               nvarB  3.21e-03  2.49e-03 -1.66e-03  8.08e-03   1.292    0.20 #>               nvarC -5.09e-02  9.24e-03 -6.90e-02 -3.28e-02  -5.506   4e-08 #>  #> model_result$model contains the fitted glm model object. #> model_result$robust$matrix contains the full robust covariance matrix. summary(model_result$model) #>  #> Call: #> glm(formula = outcome ~ assigned_treatment + trial_period + I(trial_period^2) +  #>     followup_time + I(followup_time^2) + catvarA + catvarB +  #>     nvarA + nvarB + nvarC, family = binomial(link = \"logit\"),  #>     data = data, weights = w) #>  #> Coefficients: #>                     Estimate Std. Error z value Pr(>|z|)     #> (Intercept)        -2.35e+00   2.26e-01  -10.39  < 2e-16 *** #> assigned_treatment -4.20e-01   5.37e-02   -7.83  5.0e-15 *** #> trial_period       -2.09e-03   8.44e-04   -2.48    0.013 *   #> I(trial_period^2)   1.04e-05   1.91e-06    5.48  4.3e-08 *** #> followup_time       6.19e-03   1.21e-03    5.11  3.3e-07 *** #> I(followup_time^2) -4.24e-05   8.96e-06   -4.73  2.3e-06 *** #> catvarA1            3.35e-01   4.03e-02    8.30  < 2e-16 *** #> catvarA2            4.42e-01   5.37e-02    8.23  < 2e-16 *** #> catvarA3           -1.02e+01   5.62e+01   -0.18    0.856     #> catvarA7            3.39e-01   6.38e-02    5.31  1.1e-07 *** #> catvarB1           -4.41e-01   1.85e-01   -2.38    0.017 *   #> catvarB2           -1.82e-01   1.89e-01   -0.96    0.336     #> catvarB3           -2.45e+00   3.66e-01   -6.69  2.2e-11 *** #> catvarB7           -9.16e-01   1.88e-01   -4.87  1.1e-06 *** #> nvarA              -2.09e-02   8.80e-03   -2.37    0.018 *   #> nvarB               3.21e-03   3.88e-04    8.28  < 2e-16 *** #> nvarC              -5.09e-02   1.23e-03  -41.21  < 2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 53204  on 99925  degrees of freedom #> Residual deviance: 50686  on 99909  degrees of freedom #> AIC: 50648 #>  #> Number of Fisher Scoring iterations: 13 new_data <- data.table::fread(file.path(working_dir, \"trial_1.csv\")) new_data <- rbind(data.table::as.data.table(prep_data$data_template), new_data) model_preds <- predict(model_result, predict_times = c(0:40), newdata = new_data, type = \"cum_inc\") plot(   model_preds$difference$followup_time,   model_preds$difference$cum_inc_diff,   ty = \"l\", ylab = \"Cumulative Incidence Difference\",   xlab = \"Follow-up Time\",   ylim = c(-0.15, 0.05) ) lines(model_preds$difference$followup_time, model_preds$difference$`2.5%`, lty = 2) lines(model_preds$difference$followup_time, model_preds$difference$`97.5%`, lty = 2)"},{"path":"https://causal-lda.github.io/TrialEmulation/articles/new-interface.html","id":"user-interface","dir":"Articles","previous_headings":"","what":"User Interface","title":"New Interface","text":"sequence target trials analysis starts specifying estimand used: Additionally useful create directory save files later inspection.","code":"trial_pp <- trial_sequence(estimand = \"PP\") # Per-protocol trial_itt <- trial_sequence(estimand = \"ITT\") # Intention-to-treat trial_pp_dir <- file.path(tempdir(), \"trial_pp\") dir.create(trial_pp_dir) trial_itt_dir <- file.path(tempdir(), \"trial_itt\") dir.create(trial_itt_dir)"},{"path":"https://causal-lda.github.io/TrialEmulation/articles/new-interface.html","id":"observational-data","dir":"Articles","previous_headings":"User Interface","what":"Observational Data","title":"New Interface","text":"Next user must specify observational input data used target trial emulation. need specify columns contain values used. can inspect object printing: see newly attached data. pre-processing occurred: id, period, treatment, outcome eligible columns renamed names, additional columns required later processing created. also see hints components analysis yet defined.","code":"data(\"data_censored\") trial_pp <- trial_pp |>   set_data(     data = data_censored,     id = \"id\",     period = \"period\",     treatment = \"treatment\",     outcome = \"outcome\",     eligible = \"eligible\"   )  # Function style without pipes trial_itt <- set_data(   trial_itt,   data = data_censored,   id = \"id\",   period = \"period\",   treatment = \"treatment\",   outcome = \"outcome\",   eligible = \"eligible\" ) trial_itt #> Trial Sequence Object  #> Estimand: Intention-to-treat  #>   #> Data:  #>  - N: 725 observations from 89 patients  #>         id period treatment    x1           x2    x3        x4   age      age_s #>      <int>  <int>     <num> <num>        <num> <int>     <num> <num>      <num> #>   1:     1      0         1     1  1.146148362     0 0.7342030    36 0.08333333 #>   2:     1      1         1     1  0.002200337     0 0.7342030    37 0.16666667 #>  ---                                                                            #> 724:    99      6         1     1 -0.033762356     1 0.5752681    71 3.00000000 #> 725:    99      7         0     0 -1.340496520     1 0.5752681    72 3.08333333 #>      outcome censored eligible time_on_regime #>        <num>    <int>    <num>          <num> #>   1:       0        0        1              0 #>   2:       0        0        0              1 #>  ---                                          #> 724:       0        0        0              1 #> 725:       1        0        0              2 #>   #> IPW for informative censoring:  #>  - No weight model specified  #>   #> Sequence of Trials Data:  #> - Use set_expansion_options() and expand_trials() to construct the sequence of trials dataset.  #>   #> Outcome model:  #>  - Outcome model not specified. Use set_outcome_model()"},{"path":"https://causal-lda.github.io/TrialEmulation/articles/new-interface.html","id":"weight-models","dir":"Articles","previous_headings":"User Interface","what":"Weight Models","title":"New Interface","text":"adjust effects informative censoring, inverse probability censoring weights (IPCW) can applied. estimate weights, construct time--(censoring-)event models. Two sets models fit two censoring mechanisms may apply: censoring due deviation assigned treatment informative censoring. data used fitting weight models accessible ipw_data method.","code":"ipw_data(trial_itt) #> Key: <id> #> Indices: <first>, <am_1> #>         id period treatment    x1           x2    x3        x4   age      age_s #>      <int>  <int>     <num> <num>        <num> <int>     <num> <num>      <num> #>   1:     1      0         1     1  1.146148362     0 0.7342030    36 0.08333333 #>   2:     1      1         1     1  0.002200337     0 0.7342030    37 0.16666667 #>   3:     1      2         1     0 -0.481762418     0 0.7342030    38 0.25000000 #>   4:     1      3         1     0  0.007872396     0 0.7342030    39 0.33333333 #>   5:     1      4         1     1  0.216053715     0 0.7342030    40 0.41666667 #>  ---                                                                            #> 721:    99      3         0     0 -0.747905701     1 0.5752681    68 2.75000000 #> 722:    99      4         0     0 -0.790056043     1 0.5752681    69 2.83333333 #> 723:    99      5         1     1  0.387429397     1 0.5752681    70 2.91666667 #> 724:    99      6         1     1 -0.033762356     1 0.5752681    71 3.00000000 #> 725:    99      7         0     0 -1.340496520     1 0.5752681    72 3.08333333 #>      outcome censored eligible time_of_event  first  am_1  cumA switch #>        <num>    <int>    <num>         <num> <lgcl> <num> <num>  <num> #>   1:       0        0        1          9999   TRUE     0     1      0 #>   2:       0        0        0          9999  FALSE     1     2      0 #>   3:       0        0        0          9999  FALSE     1     3      0 #>   4:       0        0        0          9999  FALSE     1     4      0 #>   5:       0        0        0          9999  FALSE     1     5      0 #>  ---                                                                   #> 721:       0        0        0             7  FALSE     0     2      0 #> 722:       0        0        0             7  FALSE     0     2      0 #> 723:       0        0        0             7  FALSE     0     3      1 #> 724:       0        0        0             7  FALSE     1     4      0 #> 725:       1        0        0             7  FALSE     1     4      1 #>      regime_start time_on_regime eligible0 eligible1 #>             <int>          <num>     <num>     <num> #>   1:            0              0         1         0 #>   2:            0              1         0         1 #>   3:            0              2         0         1 #>   4:            0              3         0         1 #>   5:            0              4         0         1 #>  ---                                                 #> 721:            2              1         1         0 #> 722:            2              2         1         0 #> 723:            5              3         1         0 #> 724:            5              1         0         1 #> 725:            7              2         0         1"},{"path":"https://causal-lda.github.io/TrialEmulation/articles/new-interface.html","id":"censoring-due-to-treatment-switching","dir":"Articles","previous_headings":"User Interface > Weight Models","what":"Censoring due to treatment switching","title":"New Interface","text":"specify model formulas used calculating probability receiving treatment current period. Separate models fitted patients treatment = 1 treatment = 0 previous period. Stabilized weights used fitting numerator denominator models. optional arguments specify columns can include/exclude observations treatment models. used case possible patient deviate certain treatment assignment period. type censoring used ITT estimand, use set_switch_weight_model() trial_ITT objects. Note calculated stabilised weights, numerator denominator model required. numerator contain terms time varying. terms later included final time--event model outcome.","code":"trial_pp <- trial_pp |>   set_switch_weight_model(     numerator = ~age,     denominator = ~ age + x1 + x3,     model_fitter = stats_glm_logit(save_path = file.path(trial_pp_dir, \"switch_models\"))   ) trial_pp@switch_weights #>  - Numerator formula: treatment ~ age  #>  - Denominator formula: treatment ~ age + x1 + x3  #>  - Model fitter type: te_stats_glm_logit  #>  - Weight models not fitted. Use calculate_weights()"},{"path":"https://causal-lda.github.io/TrialEmulation/articles/new-interface.html","id":"other-informative-censoring","dir":"Articles","previous_headings":"User Interface > Weight Models","what":"Other informative censoring","title":"New Interface","text":"case informative censoring occurring data, can create similar models estimate IPCW. can used types estimand. Compared set_switch_weight_model additional required arguments: censor_event specifies column containing censoring indicator pool_models species models may fit separately (set_switch_weight_model) pooled across treatments previous period. choices \"none\", \"\", \"numerator\" . default allowed choices depends estimand.","code":"trial_pp <- trial_pp |>   set_censor_weight_model(     censor_event = \"censored\",     numerator = ~x2,     denominator = ~ x2 + x1,     pool_models = \"none\",     model_fitter = stats_glm_logit(save_path = file.path(trial_pp_dir, \"switch_models\"))   ) trial_pp@censor_weights #>  - Numerator formula: 1 - censored ~ x2  #>  - Denominator formula: 1 - censored ~ x2 + x1  #>  - Model fitter type: te_stats_glm_logit  #>  - Weight models not fitted. Use calculate_weights() trial_itt <- set_censor_weight_model(   trial_itt,   censor_event = \"censored\",   numerator = ~x2,   denominator = ~ x2 + x1,   pool_models = \"numerator\",   model_fitter = stats_glm_logit(save_path = file.path(trial_itt_dir, \"switch_models\")) ) trial_itt@censor_weights #>  - Numerator formula: 1 - censored ~ x2  #>  - Denominator formula: 1 - censored ~ x2 + x1  #>  - Numerator model is pooled across treatment arms. Denominator model is not pooled.  #>  - Model fitter type: te_stats_glm_logit  #>  - Weight models not fitted. Use calculate_weights()"},{"path":"https://causal-lda.github.io/TrialEmulation/articles/new-interface.html","id":"calculate-weights","dir":"Articles","previous_headings":"User Interface > Weight Models","what":"Calculate Weights","title":"New Interface","text":"Next need fit individual models combine weights. done calculate_weights(). full model objects saved disk directories created . summaries stored trial sequence object can printed:","code":"trial_pp <- trial_pp |> calculate_weights() trial_itt <- calculate_weights(trial_itt) show_weight_models(trial_itt) #> Weight Models for Informative Censoring #> --------------------------------------- #>  #> [[n]] #> Model: P(censor_event = 0 | X) for numerator  #>   #>  term        estimate   std.error statistic p.value      #>  (Intercept)  2.4480907 0.1405726 17.415128 6.334656e-68 #>  x2          -0.4486482 0.1368765 -3.277759 1.046346e-03 #>   #>  null.deviance df.null logLik    AIC      BIC      deviance df.residual nobs #>  404.2156      724     -196.7002 397.4004 406.5727 393.4004 723         725  #>   #>  path                                                          #>  /tmp/RtmpZelgW4/trial_itt/switch_models/model_75751943328.rds #>   #> [[d0]] #> Model: P(censor_event = 0 | X, previous treatment = 0) for denominator  #>   #>  term        estimate   std.error statistic p.value      #>  (Intercept)  1.8941961 0.2071122  9.145746 5.921948e-20 #>  x2          -0.5898292 0.1693402 -3.483101 4.956409e-04 #>  x1           0.8552603 0.3452930  2.476912 1.325247e-02 #>   #>  null.deviance df.null logLik    AIC      BIC      deviance df.residual nobs #>  283.0723      425     -132.1655 270.3309 282.4943 264.3309 423         426  #>   #>  path                                                          #>  /tmp/RtmpZelgW4/trial_itt/switch_models/model_7572d8ad7bf.rds #>   #> [[d1]] #> Model: P(censor_event = 0 | X, previous treatment = 1) for denominator  #>   #>  term        estimate    std.error statistic  p.value      #>  (Intercept)  2.81443372 0.3122688  9.0128570 2.007570e-19 #>  x2          -0.03713196 0.2699579 -0.1375472 8.905983e-01 #>  x1           0.89351418 0.7771954  1.1496648 2.502819e-01 #>   #>  null.deviance df.null logLik    AIC      BIC      deviance df.residual nobs #>  113.0528      298     -55.72938 117.4588 128.5601 111.4588 296         299  #>   #>  path                                                          #>  /tmp/RtmpZelgW4/trial_itt/switch_models/model_7577becb411.rds #>"},{"path":"https://causal-lda.github.io/TrialEmulation/articles/new-interface.html","id":"specify-outcome-model","dir":"Articles","previous_headings":"User Interface","what":"Specify Outcome Model","title":"New Interface","text":"Now can specify outcome model. can include adjustment terms variables dataset. can also specify followup_time trial_period terms included model. weight models, can specify model_fitter. numerator terms stabilised weight models automatically included outcome model formula. necessary specify outcome model stage need know columns retained expanded construction sequence trials data set. expansion possible set outcome model modify covariates modelled, e.g. add interaction squared term. add term variable expanded data, expansion procedure need repeated.","code":"trial_pp <- set_outcome_model(trial_pp) trial_itt <- set_outcome_model(trial_itt, adjustment_terms = ~x2)"},{"path":"https://causal-lda.github.io/TrialEmulation/articles/new-interface.html","id":"expand-trials","dir":"Articles","previous_headings":"User Interface","what":"Expand Trials","title":"New Interface","text":"Now ready create data set sequence target trials. First specify options expansion expand.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/articles/new-interface.html","id":"set-expansion-options","dir":"Articles","previous_headings":"User Interface > Expand Trials","what":"Set Expansion Options","title":"New Interface","text":"two options set output: specifies expanded data saved. can large, may need save disk CSV files DuckDB, using save_to_* function. chunk_size: expanded data large fit memory, need process chunks specifying many patients processed one time. options big data save csv DuckDB:","code":"trial_pp <- set_expansion_options(   trial_pp,   output = save_to_datatable(),   chunk_size = 500 ) trial_itt <- set_expansion_options(   trial_itt,   output = save_to_datatable(),   chunk_size = 500 ) trial_pp <- trial_pp |>   set_expansion_options(     output = save_to_csv(file.path(trial_pp_dir, \"trial_csvs\")),     chunk_size = 500   )  trial_itt <- set_expansion_options(   trial_itt,   output = save_to_csv(file.path(trial_itt_dir, \"trial_csvs\")),   chunk_size = 500 )  trial_itt <- set_expansion_options(   trial_itt,   output = save_to_duckdb(file.path(trial_itt_dir, \"trial_duckdb\")),   chunk_size = 500 )  # For the purposes of this vignette the previous `save_to_datatable()` output # option is used in the following code."},{"path":"https://causal-lda.github.io/TrialEmulation/articles/new-interface.html","id":"create-sequence-of-trials-data","dir":"Articles","previous_headings":"User Interface > Expand Trials","what":"Create Sequence of Trials Data","title":"New Interface","text":"Now ready construct sequence trials dataset using expand_trials() method. can take time large input data. resulting object shows settings used expansion expanded data saved.","code":"trial_pp <- expand_trials(trial_pp) trial_itt <- expand_trials(trial_itt) trial_pp@expansion #> Sequence of Trials Data:  #> - Chunk size: 500  #> - Censor at switch: TRUE  #> - First period: 0 | Last period: Inf  #>   #> A TE Datastore Datatable object  #> N: 500 observations  #>         id trial_period followup_time outcome    weight treatment         x2 #>      <int>        <int>         <int>   <num>     <num>     <num>      <num> #>   1:     1            0             0       0 1.0000000         1  1.1461484 #>   2:     1            0             1       0 0.8951447         1  1.1461484 #>  ---                                                                         #> 499:    99            0             0       0 1.0000000         1 -0.3463778 #> 500:    99            0             1       0 1.0122336         1 -0.3463778 #>        age assigned_treatment #>      <num>              <num> #>   1:    36                  1 #>   2:    36                  1 #>  ---                          #> 499:    65                  1 #> 500:    65                  1"},{"path":"https://causal-lda.github.io/TrialEmulation/articles/new-interface.html","id":"sample-or-load-from-expanded-data","dir":"Articles","previous_headings":"User Interface","what":"Sample or Load from Expanded Data","title":"New Interface","text":"Now expanded data created, can prepare data fit outcome model. data can fit comfortably memory, trivial step using load_expanded_data. large datasets, may necessary sample expanded setting p_control argument. sets probability observation withoutcome == 0 included loaded data. seed can set reproducibility. Additionally, vector periods include can specified, eg period = 1:60, /subsetting condition, subset_condition = \"age > 65\". loaded data can accessed /modified outcome_data().","code":"trial_itt <- load_expanded_data(trial_itt, seed = 1234, p_control = 0.5) x2_sq <- outcome_data(trial_itt)$x2^2 outcome_data(trial_itt)$x2_sq <- x2_sq head(outcome_data(trial_itt)) #>       id trial_period followup_time outcome weight treatment          x2 #>    <int>        <int>         <int>   <num>  <num>     <num>       <num> #> 1:    15            0             0       1      1         1 -0.73652563 #> 2:    32            0             0       1      1         1  1.98613804 #> 3:    26            0             0       0      1         0  1.64332982 #> 4:    10            0             0       0      1         1  0.05091841 #> 5:     5            0             0       0      1         1  0.74909203 #> 6:    46            0             0       0      1         1 -0.88598258 #>    assigned_treatment sample_weight       x2_sq #>                 <num>         <num>       <num> #> 1:                  1             1 0.542470010 #> 2:                  1             1 3.944744297 #> 3:                  0             2 2.700532894 #> 4:                  1             2 0.002592685 #> 5:                  1             2 0.561138869 #> 6:                  1             2 0.784965131"},{"path":"https://causal-lda.github.io/TrialEmulation/articles/new-interface.html","id":"fit-marginal-structural-model","dir":"Articles","previous_headings":"User Interface","what":"Fit Marginal Structural Model","title":"New Interface","text":"fit outcome model use fit_msm(). two options specify weights used model. First can select weights columns used, default product columns weight sample_weight used. can also apply modifier function, example, trim large weights fixed value percentile. summary model fit shown: Depending model fitter used, can also access model object. default stats::glm logistic model, glm object well sandwich variance-covariance matrix. complete object shows specifications:","code":"trial_itt <- fit_msm(   trial_itt,   weight_cols = c(\"weight\", \"sample_weight\"),   modify_weights = function(w) {     q99 <- quantile(w, probs = 0.99)     pmin(w, q99)   } ) #> Warning in eval(family$initialize): non-integer #successes in a binomial glm! #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred trial_itt@outcome_model #> - Formula: outcome ~ assigned_treatment + x2 + followup_time + I(followup_time^2) + trial_period + I(trial_period^2)  #> - Treatment variable: assigned_treatment  #> - Adjustment variables: x2  #> - Model fitter type: te_stats_glm_logit  #>   #> Model Summary:  #>   #>  term               estimate std.error statistic p.value conf.low conf.high #>  (Intercept)        -6.02    0.780      -7.72    1.2e-14 -7.550   -4.4916   #>  assigned_treatment  1.63    0.496       3.28    1.0e-03  0.654    2.5977   #>  x2                  0.31    0.418       0.74    4.6e-01 -0.511    1.1282   #>  followup_time       0.34    0.244       1.38    1.7e-01 -0.141    0.8148   #>  I(followup_time^2) -0.02    0.014      -1.42    1.5e-01 -0.049    0.0077   #>  trial_period        7.29    0.978       7.45    9.2e-14  5.371    9.2042   #>  I(trial_period^2)  -7.68    0.537     -14.31    2.0e-46 -8.738   -6.6320   #>   #>  null.deviance df.null logLik AIC BIC deviance df.residual nobs #>  158           800     -69.1  152 185 135      794         801 trial_itt@outcome_model@fitted@model$model #>  #> Call:  glm(formula = formula, family = binomial(\"logit\"), data = data,  #>     weights = weights, x = FALSE, y = FALSE) #>  #> Coefficients: #>        (Intercept)  assigned_treatment                  x2       followup_time   #>           -6.02067             1.62585             0.30837             0.33673   #> I(followup_time^2)        trial_period   I(trial_period^2)   #>           -0.02049             7.28762            -7.68478   #>  #> Degrees of Freedom: 800 Total (i.e. Null);  794 Residual #> Null Deviance:       157.8  #> Residual Deviance: 134.7     AIC: 152.2 trial_itt@outcome_model@fitted@model$vcov #>                     (Intercept) assigned_treatment           x2 followup_time #> (Intercept)         0.608651263       -0.007606479  0.042942422  -0.143451214 #> assigned_treatment -0.007606479        0.245882729  0.087953406  -0.052364376 #> x2                  0.042942422        0.087953406  0.174977954  -0.045052691 #> followup_time      -0.143451214       -0.052364376 -0.045052691   0.059487800 #> I(followup_time^2)  0.007130666        0.002815736  0.002843807  -0.003362158 #> trial_period       -0.105885453       -0.341609248 -0.097440741   0.104454026 #> I(trial_period^2)   0.049055894        0.165009684  0.046219048  -0.054969078 #>                    I(followup_time^2) trial_period I(trial_period^2) #> (Intercept)              0.0071306658 -0.105885452        0.04905589 #> assigned_treatment       0.0028157357 -0.341609248        0.16500968 #> x2                       0.0028438066 -0.097440741        0.04621905 #> followup_time           -0.0033621580  0.104454026       -0.05496908 #> I(followup_time^2)       0.0002067028 -0.005143791        0.00265172 #> trial_period            -0.0051437905  0.956232062       -0.51353487 #> I(trial_period^2)        0.0026517200 -0.513573594        0.28851494 trial_itt #> Trial Sequence Object  #> Estimand: Intention-to-treat  #>   #> Data:  #>  - N: 725 observations from 89 patients  #>         id period treatment    x1           x2    x3        x4   age      age_s #>      <int>  <int>     <num> <num>        <num> <int>     <num> <num>      <num> #>   1:     1      0         1     1  1.146148362     0 0.7342030    36 0.08333333 #>   2:     1      1         1     1  0.002200337     0 0.7342030    37 0.16666667 #>  ---                                                                            #> 724:    99      6         1     1 -0.033762356     1 0.5752681    71 3.00000000 #> 725:    99      7         0     0 -1.340496520     1 0.5752681    72 3.08333333 #>      outcome censored eligible time_on_regime        wt       wtC #>        <num>    <int>    <num>          <num>     <num>     <num> #>   1:       0        0        1              0 0.9835463 0.9835463 #>   2:       0        0        0              1 0.9429254 0.9429254 #>  ---                                                              #> 724:       0        0        0              1 0.9440988 0.9440988 #> 725:       1        0        0              2 1.0092093 1.0092093 #>   #> IPW for informative censoring:  #>  - Numerator formula: 1 - censored ~ x2  #>  - Denominator formula: 1 - censored ~ x2 + x1  #>  - Numerator model is pooled across treatment arms. Denominator model is not pooled.  #>  - Model fitter type: te_stats_glm_logit  #>  - View weight model summaries with show_weight_models()  #>   #> Sequence of Trials Data:  #> - Chunk size: 500  #> - Censor at switch: FALSE  #> - First period: 0 | Last period: Inf  #>   #> A TE Datastore Datatable object  #> N: 1558 observations  #>          id trial_period followup_time outcome    weight treatment         x2 #>       <int>        <int>         <int>   <num>     <num>     <num>      <num> #>    1:     1            0             0       0 1.0000000         1  1.1461484 #>    2:     1            0             1       0 0.9429254         1  1.1461484 #>   ---                                                                         #> 1557:    99            0             6       0 0.8917236         1 -0.3463778 #> 1558:    99            0             7       1 0.8999358         0 -0.3463778 #>       assigned_treatment #>                    <num> #>    1:                  1 #>    2:                  1 #>   ---                    #> 1557:                  1 #> 1558:                  1 #>   #> Outcome model:  #> - Formula: outcome ~ assigned_treatment + x2 + followup_time + I(followup_time^2) + trial_period + I(trial_period^2)  #> - Treatment variable: assigned_treatment  #> - Adjustment variables: x2  #> - Model fitter type: te_stats_glm_logit  #>   #> Model Summary:  #>   #>  term               estimate std.error statistic p.value conf.low conf.high #>  (Intercept)        -6.02    0.780      -7.72    1.2e-14 -7.550   -4.4916   #>  assigned_treatment  1.63    0.496       3.28    1.0e-03  0.654    2.5977   #>  x2                  0.31    0.418       0.74    4.6e-01 -0.511    1.1282   #>  followup_time       0.34    0.244       1.38    1.7e-01 -0.141    0.8148   #>  I(followup_time^2) -0.02    0.014      -1.42    1.5e-01 -0.049    0.0077   #>  trial_period        7.29    0.978       7.45    9.2e-14  5.371    9.2042   #>  I(trial_period^2)  -7.68    0.537     -14.31    2.0e-46 -8.738   -6.6320   #>   #>  null.deviance df.null logLik AIC BIC deviance df.residual nobs #>  158           800     -69.1  152 185 135      794         801  #>   #> Outcome data  #> N: 801 observations from 76 patients in 18 trial periods  #> Periods: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  #>         id trial_period followup_time outcome   weight treatment         x2 #>      <int>        <int>         <int>   <num>    <num>     <num>      <num> #>   1:    15            0             0       1 1.000000         1 -0.7365256 #>   2:    32            0             0       1 1.000000         1  1.9861380 #>  ---                                                                        #> 800:    39            0            19       0 1.351756         1  0.2189413 #> 801:    54            0            19       0 1.359294         0  1.2924128 #>      assigned_treatment sample_weight     x2_sq        w #>                   <num>         <num>     <num>    <num> #>   1:                  1             1 0.5424700 1.000000 #>   2:                  1             1 3.9447443 1.000000 #>  ---                                                     #> 800:                  1             2 0.0479353 2.703512 #> 801:                  0             2 1.6703309 2.718587"},{"path":"https://causal-lda.github.io/TrialEmulation/articles/new-interface.html","id":"inference","dir":"Articles","previous_headings":"User Interface","what":"Inference","title":"New Interface","text":"use predict() method estimate survival probabilities cumulative incidences different values assigned_treatment. predict method takes baseline provided newdata, .e. observations followup_time == 0 constructs data followup_time given predict_times. important specify newdata correctly meaningful interpretation differences survival.","code":"preds <- predict(   trial_itt,   newdata = outcome_data(trial_itt)[trial_period == 1, ],   predict_times = 0:10,   type = \"survival\", ) plot(preds$difference$followup_time, preds$difference$survival_diff,   type = \"l\", xlab = \"Follow up\", ylab = \"Survival difference\" ) lines(preds$difference$followup_time, preds$difference$`2.5%`, type = \"l\", col = \"red\", lty = 2) lines(preds$difference$followup_time, preds$difference$`97.5%`, type = \"l\", col = \"red\", lty = 2)"},{"path":"https://causal-lda.github.io/TrialEmulation/articles/new-interface.html","id":"flowchart","dir":"Articles","previous_headings":"User Interface","what":"Flowchart","title":"New Interface","text":"flow chart helps visualise complete workflow.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Isaac Gravestock. Author, maintainer. Li Su. Author. Roonak Rezvani. Author.            Original package author Julia Moesch. Author. Medical Research Council (MRC). Funder. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gravestock , Su L, Rezvani R, Moesch J (2025). TrialEmulation: Causal Analysis Observational Time--Event Data. R package version 0.0.4.1, https://github.com/Causal-LDA/TrialEmulation, https://causal-lda.github.io/TrialEmulation/.","code":"@Manual{,   title = {TrialEmulation: Causal Analysis of Observational Time-to-Event Data},   author = {Isaac Gravestock and Li Su and Roonak Rezvani and Julia Moesch},   year = {2025},   note = {R package version 0.0.4.1,     https://github.com/Causal-LDA/TrialEmulation},   url = {https://causal-lda.github.io/TrialEmulation/}, }"},{"path":"https://causal-lda.github.io/TrialEmulation/index.html","id":"trialemulation-","dir":"","previous_headings":"","what":"Causal Analysis of Observational Time-to-Event Data","title":"Causal Analysis of Observational Time-to-Event Data","text":"package implements algorithms conduct sequence target trials analysis.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Causal Analysis of Observational Time-to-Event Data","text":"package available CRAN: install latest development version github:","code":"install.packages('TrialEmulation') remotes::install_github(\"Causal-LDA/TrialEmulation\")"},{"path":"https://causal-lda.github.io/TrialEmulation/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Causal Analysis of Observational Time-to-Event Data","text":"Please see Getting Started vignette information work package. manuscript preparation fully describe methodology.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/TrialEmulation-package.html","id":null,"dir":"Reference","previous_headings":"","what":"TrialEmulation Package — TrialEmulation-package","title":"TrialEmulation Package — TrialEmulation-package","text":"TrialEmulation facilitates preprocessing analysing observational data emulated randomised trial.","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/TrialEmulation-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"TrialEmulation Package — TrialEmulation-package","text":"Maintainer: Isaac Gravestock isaac.gravestock@roche.com (ORCID) Authors: Li Su li.su@mrc-bsu.cam.ac.uk Roonak Rezvani roonak.r74@gmail.com (ORCID) (Original package author) Julia Moesch julia.moesch@roche.com contributors: Medical Research Council (MRC) [funder] F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/calculate_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and transform predictions — calculate_predictions","title":"Calculate and transform predictions — calculate_predictions","text":"Calculate transform predictions","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/calculate_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and transform predictions — calculate_predictions","text":"","code":"calculate_predictions(   newdata,   model,   treatment_values,   pred_fun,   coefs_mat,   matrix_n_col )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/calculate_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and transform predictions — calculate_predictions","text":"newdata New data predict outcome model GLM object treatment_values Named vector value insert assigned_treatment column pred_fun Function transform prediction matrix coefs_mat Matrix coefficients corresponding model_matrix. matrix_n_col Expected number column prediction.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/calculate_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and transform predictions — calculate_predictions","text":"matrix transformed predicted values. Number columns corresponds number rows coefs_mat","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/calculate_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Inverse Probability of Censoring Weights — calculate_weights","text":"","code":"calculate_weights(object, ...)  # S4 method for class 'trial_sequence_ITT' calculate_weights(object, quiet = FALSE)  # S4 method for class 'trial_sequence_AT' calculate_weights(object, quiet = FALSE)  # S4 method for class 'trial_sequence_PP' calculate_weights(object, quiet = FALSE)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/calculate_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Inverse Probability of Censoring Weights — calculate_weights","text":"object trial_sequence object ... arguments used methods. quiet Prints model summaries TRUE.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/calculate_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Inverse Probability of Censoring Weights — calculate_weights","text":"trial_sequence object updated censor_weights /switch_weights slots","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/calculate_weights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Inverse Probability of Censoring Weights — calculate_weights","text":"","code":"save_dir <- file.path(tempdir(), \"switch_models\") ts <- trial_sequence(\"PP\") |>   set_data(     data = data_censored,     id = \"id\",     period = \"period\",     treatment = \"treatment\",     outcome = \"outcome\",     eligible = \"eligible\"   ) |>   set_switch_weight_model(     numerator = ~ age + x1 + x3,     denominator = ~age,     model_fitter = stats_glm_logit(save_path = save_dir)   ) |>   calculate_weights()"},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/case_control_sampling_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Case-control sampling of expanded data for the sequence of emulated trials — case_control_sampling_trials","text":"","code":"case_control_sampling_trials(   data_prep,   p_control = NULL,   subset_condition,   sort = FALSE )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/case_control_sampling_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Case-control sampling of expanded data for the sequence of emulated trials — case_control_sampling_trials","text":"data_prep Result data_preparation(). p_control Control sampling probability selecting potential controls follow-time trial. subset_condition Expression used subset() trial data case-control sampling. sort Sort data applying case-control sampling make sure resulting data identical sampling expanded data created separate_files = TRUE separate_files = FALSE.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/case_control_sampling_trials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Case-control sampling of expanded data for the sequence of emulated trials — case_control_sampling_trials","text":"data.frame split() data.frame  length(p_control) > 1. additional column sample_weight containing sample weights added result. can included models fit trial_msm().","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/case_control_sampling_trials.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Case-control sampling of expanded data for the sequence of emulated trials — case_control_sampling_trials","text":"Perform case-control sampling expanded data create data set reduced size calculate sampling weights used trial_msm().","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/case_control_sampling_trials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Case-control sampling of expanded data for the sequence of emulated trials — case_control_sampling_trials","text":"","code":"# If necessary reduce the number of threads for data.table data.table::setDTthreads(2)  data(\"te_data_ex\") samples <- case_control_sampling_trials(te_data_ex, p_control = 0.01)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/censor_func.html","id":null,"dir":"Reference","previous_headings":"","what":"Censoring Function in C++ — censor_func","title":"Censoring Function in C++ — censor_func","text":"Artificial censoring C++ function","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/censor_func.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Censoring Function in C++ — censor_func","text":"sw_data dataframe columns needed censoring process","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/check_newdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Data used for Prediction — check_newdata","title":"Check Data used for Prediction — check_newdata","text":"Check Data used Prediction","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/check_newdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Data used for Prediction — check_newdata","text":"","code":"check_newdata(newdata, model, predict_times)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/check_newdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Data used for Prediction — check_newdata","text":"newdata new data predict, missing. model glm model object. predict_times times predict add resulting newdata.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/check_newdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Data used for Prediction — check_newdata","text":"newdata data.frame","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/data_censored.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of longitudinal data for sequential trial emulation containing censoring — data_censored","title":"Example of longitudinal data for sequential trial emulation containing censoring — data_censored","text":"data contains data 89 patients followed 19 periods.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/data_censored.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of longitudinal data for sequential trial emulation containing censoring — data_censored","text":"","code":"data_censored"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/data_censored.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of longitudinal data for sequential trial emulation containing censoring — data_censored","text":"data frame 725 rows 12 variables: id patient identifier period time period treatment indicator receiving treatment period, 1=treatment, 0=non-treatment x1 time-varying categorical variable relating treatment outcome x2 time-varying numeric variable relating treatment outcome x3 fixed categorical variable relating treatment outcome x4 fixed categorical variable relating treatment outcome age patient age years age_s patient age outcome indicator outcome period, 1=event occurred, 0=event censored indicator patient censored period, 1=censored, 0=censored eligible indicator eligibility trial start period, 1=yes, 0=","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/data_manipulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Manipulation Function — data_manipulation","title":"Data Manipulation Function — data_manipulation","text":"function takes data variables extension preprocessing","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/data_manipulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Manipulation Function — data_manipulation","text":"","code":"data_manipulation(data, use_censor = TRUE)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/data_manipulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Manipulation Function — data_manipulation","text":"data data.table pre-process weight calculation extension. use_censor apply censoring due treatment switch?","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/data_preparation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data for the sequence of emulated target trials — data_preparation","text":"","code":"data_preparation(   data,   id = \"id\",   period = \"period\",   treatment = \"treatment\",   outcome = \"outcome\",   eligible = \"eligible\",   model_var = NULL,   outcome_cov = ~1,   estimand_type = c(\"ITT\", \"PP\", \"As-Treated\"),   switch_n_cov = ~1,   switch_d_cov = ~1,   first_period = NA,   last_period = NA,   use_censor_weights = FALSE,   cense = NA,   pool_cense = c(\"none\", \"both\", \"numerator\"),   cense_d_cov = ~1,   cense_n_cov = ~1,   eligible_wts_0 = NA,   eligible_wts_1 = NA,   where_var = NULL,   data_dir,   save_weight_models = FALSE,   glm_function = \"glm\",   chunk_size = 500,   separate_files = FALSE,   quiet = FALSE,   ... )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/data_preparation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data for the sequence of emulated target trials — data_preparation","text":"data data.frame containing required variables person-time format, .e.,  `long' format. id Name variable identifiers individuals.  Default `id'. period Name variable visit/period.   Default `period'. treatment Name variable  treatment indicator visit/period. Default `treatment'. outcome Name variable indicator outcome event visit/period.  Default `outcome'. eligible Name variable indicator eligibility target trial visit/period. Default `eligible'. model_var Treatment variables included marginal structural model emulated trials. model_var = \"assigned_treatment\" create variable assigned_treatment assigned treatment trial baseline, typically used ITT per-protocol analyses. model_var = \"dose\" create variable dose cumulative number  treatments received since trial baseline, typically used -treated analyses. outcome_cov RHS formula baseline covariates adjusted marginal structural model emulated trials. Note time-varying covariate specified outcome_cov, value trial baselines included expanded data. estimand_type Specify estimand causal analyses sequence emulated trials. estimand_type = \"ITT\" perform intention--treat analyses, treatment switching trial baselines ignored. estimand_type = \"PP\" perform per-protocol analyses, individuals' follow-ups artificially censored inverse probability treatment weighting applied. estimand_type = \"-Treated\" fit standard marginal structural model possible treatment sequences, individuals' follow-ups artificially censored  treatment switching trial baselines accounted applying inverse probability treatment weighting. switch_n_cov RHS formula specify logistic models estimating numerator terms inverse probability treatment weights. derived variable named time_on_regime containing duration time individual current treatment/non-treatment available use models. switch_d_cov RHS formula specify logistic models estimating denominator terms inverse probability treatment weights. first_period First time period set trial baseline  start expanding data. last_period Last time period set trial baseline  start expanding data. use_censor_weights Require inverse probability censoring weights. use_censor_weights = TRUE, variable name censoring indicator needs provided argument cense. cense Variable name censoring indicator. Required use_censor_weights = TRUE. pool_cense Fit pooled separate censoring models treated untreated immediately previous visit. Pooling can specified models numerator denominator terms inverse probability censoring weights. One \"none\", \"numerator\", \"\" (default \"none\" except estimand_type = \"ITT\" default \"numerator\"). cense_d_cov RHS formula specify logistic models estimating denominator terms inverse probability censoring weights. cense_n_cov RHS formula specify logistic models estimating numerator terms inverse probability censoring weights. eligible_wts_0 See definition eligible_wts_1 eligible_wts_1 Exclude observations fitting models inverse probability treatment weights. example, assumed individual stay treatment least 2 visits, first 2 visits  treatment initiation definition probability staying treatment 1.0 thus excluded weight models treatment immediately previous visit. Users can define variable indicates 2 observations ineligible weight model treatment immediately previous visit add variable name argument eligible_wts_1. Similar definitions applied eligible_wts_0 excluding observations fitting models inverse probability treatment weights treatment immediately previous visit. where_var Specify variable names used define subgroup conditions fitting marginal structural model subgroup individuals. Need specify jointly argument where_case. data_dir Directory save model objects save_weight_models=TRUE expanded data separate CSV files names trial_i.csvs separate_files = TRUE. specified directory exist created. directory already contains trial files, error occur, files may overwritten. save_weight_models Save model objects estimating weights data_dir. glm_function Specify glm function use marginal structural model stats parglm packages. default function glm function stats package. Users can also specify glm_function = \"parglm\" parglm function parglm package can used fitting generalized linear models parallel. default control setting  parglm nthreads = 4 method = \"FAST\", four cores Fisher information used faster computation. Users can change default control setting passing arguments nthreads method parglm.control function parglm package, alternatively, passing control argument list produced parglm.control(nthreads = , method = ). chunk_size Number individuals whose data  processed one chunk separate_files = TRUE separate_files Save expanded data separate CSV files trial. quiet Suppress printing progress messages summaries fitted models. ... Additional arguments passed glm_function. may used specify initial values parameters arguments control. See stats::glm, parglm::parglm parglm::parglm.control() information.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/data_preparation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data for the sequence of emulated target trials — data_preparation","text":"object class TE_data_prep, can either sampled (case_control_sampling_trials) directly used model (trial_msm). contains elements data expanded dataset emulated trials. separate_files = FALSE,  data.table; separate_files = TRUE, character vector file path expanded data CSV files. min_period index first trial expanded data max_period index last trial expanded data N total number observations expanded data data_template zero-row data.frame  columns attributes expanded data switch_models list summaries models fitted inverse probability treatment weights, estimand_type \"PP\" \"-Treated\" censor_models list summaries models fitted inverse probability censoring weights, use_censor_weights=TRUE args list contain parameters used prepare data fit weight models","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/data_preparation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prepare data for the sequence of emulated target trials — data_preparation","text":"function  expands observational data person-time format (.e.,  `long' format) emulate sequence target trials also estimates inverse probability treatment censoring weights required. arguments chunk_size separate_files allow processing large datasets fit memory expanded. separate_files = TRUE, input data processed chunks individuals saved separate files emulated trial. separate files can sampled case-control sampling create reduced dataset modelling.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/expand.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand Function — expand","title":"Expand Function — expand","text":"function performs data expansion given dataset","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/expand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand Function — expand","text":"","code":"expand(   sw_data,   outcomeCov_var,   where_var,   use_censor,   maxperiod,   minperiod,   keeplist )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/expand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand Function — expand","text":"sw_data datatable expand outcomeCov_var list individual baseline variables used final model where_var Variables used conditions used subsetting data used final analysis (where_case), variables included final model use_censor Use censoring per-protocol analysis - censor person-times person-trial stops taking initial treatment value maxperiod Maximum period minperiod Minimum period keeplist list contains names variables used final model","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/expand_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand trials — expand_trials","text":"","code":"expand_trials(object)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/expand_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand trials — expand_trials","text":"object trial_sequence object","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/expand_trials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand trials — expand_trials","text":"trial_sequence object data set containing full sequence target trials. data stored according options set set_expansion_options() especially save_to_* function.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/expand_until_switch.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Expand Flag After Treatment Switch — expand_until_switch","title":"Check Expand Flag After Treatment Switch — expand_until_switch","text":"Check patients switched treatment eligible trials set expand = 0.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/expand_until_switch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Expand Flag After Treatment Switch — expand_until_switch","text":"","code":"expand_until_switch(s, n)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/expand_until_switch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Expand Flag After Treatment Switch — expand_until_switch","text":"s numeric vector 1 indicates treatment switch period n length s","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/expand_until_switch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Expand Flag After Treatment Switch — expand_until_switch","text":"Vector indicator values first switch.","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/fit_msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the marginal structural model for the sequence of emulated trials — fit_msm","text":"","code":"fit_msm(   object,   weight_cols = c(\"weight\", \"sample_weight\"),   modify_weights = NULL )  # S4 method for class 'trial_sequence' fit_msm(   object,   weight_cols = c(\"weight\", \"sample_weight\"),   modify_weights = NULL )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/fit_msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the marginal structural model for the sequence of emulated trials — fit_msm","text":"object trial_sequence object weight_cols character vector column names expanded outcome dataset, ie outcome_data(object). multiple columns specified, element wise product used. Specify NULL weight columns used. modify_weights function transform weights (NULL transformation). Must take numeric vector weights vector positive, finite weights length. See examples possible function definitions. outcome marginal structural model can fit, outcome model must specified set_outcome_model() data must expanded trial sequence expand_trials(). model fit based model_fitter specified set_outcome_model using internal fit_outcome_model method.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/fit_msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the marginal structural model for the sequence of emulated trials — fit_msm","text":"modified trial_sequence object updated outcome_model slot.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/fit_msm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit the marginal structural model for the sequence of emulated trials — fit_msm","text":"","code":"trial_seq_object <- trial_sequence(\"ITT\") |>   set_data(data_censored) |>   set_outcome_model(     adjustment_terms = ~age_s,     followup_time_terms = ~ stats::poly(followup_time, degree = 2)   ) |>   set_expansion_options(output = save_to_datatable(), chunk_size = 500) |>   expand_trials() |>   load_expanded_data()  fit_msm(trial_seq_object) #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Trial Sequence Object  #> Estimand: Intention-to-treat  #>   #> Data:  #>  - N: 725 observations from 89 patients  #>         id period treatment    x1           x2    x3        x4   age      age_s #>      <int>  <int>     <num> <num>        <num> <int>     <num> <num>      <num> #>   1:     1      0         1     1  1.146148362     0 0.7342030    36 0.08333333 #>   2:     1      1         1     1  0.002200337     0 0.7342030    37 0.16666667 #>  ---                                                                            #> 724:    99      6         1     1 -0.033762356     1 0.5752681    71 3.00000000 #> 725:    99      7         0     0 -1.340496520     1 0.5752681    72 3.08333333 #>      outcome censored eligible time_on_regime    wt #>        <num>    <int>    <num>          <num> <num> #>   1:       0        0        1              0     1 #>   2:       0        0        0              1     1 #>  ---                                                #> 724:       0        0        0              1     1 #> 725:       1        0        0              2     1 #>   #> IPW for informative censoring:  #>  - No weight model specified  #>   #> Sequence of Trials Data:  #> - Chunk size: 500  #> - Censor at switch: FALSE  #> - First period: 0 | Last period: Inf  #>   #> A TE Datastore Datatable object  #> N: 1558 observations  #>          id trial_period followup_time outcome weight treatment      age_s #>       <int>        <int>         <int>   <num>  <num>     <num>      <num> #>    1:     1            0             0       0      1         1 0.08333333 #>    2:     1            0             1       0      1         1 0.08333333 #>   ---                                                                      #> 1557:    99            0             6       0      1         1 2.50000000 #> 1558:    99            0             7       1      1         0 2.50000000 #>       assigned_treatment #>                    <num> #>    1:                  1 #>    2:                  1 #>   ---                    #> 1557:                  1 #> 1558:                  1 #>   #> Outcome model:  #> - Formula: outcome ~ assigned_treatment + age_s + stats::poly(followup_time, degree = 2) + trial_period + I(trial_period^2)  #> - Treatment variable: assigned_treatment  #> - Adjustment variables: age_s  #> - Model fitter type: te_stats_glm_logit  #>   #> Model Summary:  #>   #>  term                                    estimate std.error statistic p.value #>  (Intercept)                              -5.46    0.52     -10.60    3.1e-26 #>  assigned_treatment                        1.34    0.53       2.50    1.2e-02 #>  age_s                                     0.48    0.34       1.42    1.5e-01 #>  stats::poly(followup_time, degree = 2)1  -2.23   14.99      -0.15    8.8e-01 #>  stats::poly(followup_time, degree = 2)2 -20.02   14.45      -1.39    1.7e-01 #>  trial_period                              7.05    0.97       7.23    4.8e-13 #>  I(trial_period^2)                        -7.51    0.54     -13.96    2.8e-44 #>  conf.low conf.high #>   -6.47   -4.4      #>    0.29    2.4      #>   -0.18    1.2      #>  -31.60   27.1      #>  -48.34    8.3      #>    5.14    9.0      #>   -8.57   -6.5      #>   #>  null.deviance df.null logLik AIC BIC deviance df.residual nobs #>  160           1557    -68.4  151 188 137      1551        1558 #>   #> Outcome data  #> N: 1558 observations from 89 patients in 18 trial periods  #> Periods: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  #>          id trial_period followup_time outcome weight treatment      age_s #>       <int>        <int>         <int>   <num>  <num>     <num>      <num> #>    1:     1            0             0       0      1         1 0.08333333 #>    2:     1            0             1       0      1         1 0.08333333 #>   ---                                                                      #> 1557:    99            0             6       0      1         1 2.50000000 #> 1558:    99            0             7       1      1         0 2.50000000 #>       assigned_treatment sample_weight     w #>                    <num>         <num> <num> #>    1:                  1             1     1 #>    2:                  1             1     1 #>   ---                                        #> 1557:                  1             1     1 #> 1558:                  1             1     1  # Using modify_weights functions ----  # returns a function that truncates weights to limits limit_weight <- function(lower_limit, upper_limit) {   function(w) {     w[w > upper_limit] <- upper_limit     w[w < lower_limit] <- lower_limit     w   } }  # calculate 1st and 99th percentile limits and truncate p99_weight <- function(w) {   p99 <- quantile(w, prob = c(0.01, 0.99), type = 1)   limit_weight(p99[1], p99[2])(w) }  # set all weights to 1 all_ones <- function(w) {   rep(1, length(w)) }  fit_msm(trial_seq_object, modify_weights = limit_weight(0.01, 4)) #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Trial Sequence Object  #> Estimand: Intention-to-treat  #>   #> Data:  #>  - N: 725 observations from 89 patients  #>         id period treatment    x1           x2    x3        x4   age      age_s #>      <int>  <int>     <num> <num>        <num> <int>     <num> <num>      <num> #>   1:     1      0         1     1  1.146148362     0 0.7342030    36 0.08333333 #>   2:     1      1         1     1  0.002200337     0 0.7342030    37 0.16666667 #>  ---                                                                            #> 724:    99      6         1     1 -0.033762356     1 0.5752681    71 3.00000000 #> 725:    99      7         0     0 -1.340496520     1 0.5752681    72 3.08333333 #>      outcome censored eligible time_on_regime    wt #>        <num>    <int>    <num>          <num> <num> #>   1:       0        0        1              0     1 #>   2:       0        0        0              1     1 #>  ---                                                #> 724:       0        0        0              1     1 #> 725:       1        0        0              2     1 #>   #> IPW for informative censoring:  #>  - No weight model specified  #>   #> Sequence of Trials Data:  #> - Chunk size: 500  #> - Censor at switch: FALSE  #> - First period: 0 | Last period: Inf  #>   #> A TE Datastore Datatable object  #> N: 1558 observations  #>          id trial_period followup_time outcome weight treatment      age_s #>       <int>        <int>         <int>   <num>  <num>     <num>      <num> #>    1:     1            0             0       0      1         1 0.08333333 #>    2:     1            0             1       0      1         1 0.08333333 #>   ---                                                                      #> 1557:    99            0             6       0      1         1 2.50000000 #> 1558:    99            0             7       1      1         0 2.50000000 #>       assigned_treatment #>                    <num> #>    1:                  1 #>    2:                  1 #>   ---                    #> 1557:                  1 #> 1558:                  1 #>   #> Outcome model:  #> - Formula: outcome ~ assigned_treatment + age_s + stats::poly(followup_time, degree = 2) + trial_period + I(trial_period^2)  #> - Treatment variable: assigned_treatment  #> - Adjustment variables: age_s  #> - Model fitter type: te_stats_glm_logit  #>   #> Model Summary:  #>   #>  term                                    estimate std.error statistic p.value #>  (Intercept)                              -5.46    0.52     -10.60    3.1e-26 #>  assigned_treatment                        1.34    0.53       2.50    1.2e-02 #>  age_s                                     0.48    0.34       1.42    1.5e-01 #>  stats::poly(followup_time, degree = 2)1  -2.23   14.99      -0.15    8.8e-01 #>  stats::poly(followup_time, degree = 2)2 -20.02   14.45      -1.39    1.7e-01 #>  trial_period                              7.05    0.97       7.23    4.8e-13 #>  I(trial_period^2)                        -7.51    0.54     -13.96    2.8e-44 #>  conf.low conf.high #>   -6.47   -4.4      #>    0.29    2.4      #>   -0.18    1.2      #>  -31.60   27.1      #>  -48.34    8.3      #>    5.14    9.0      #>   -8.57   -6.5      #>   #>  null.deviance df.null logLik AIC BIC deviance df.residual nobs #>  160           1557    -68.4  151 188 137      1551        1558 #>   #> Outcome data  #> N: 1558 observations from 89 patients in 18 trial periods  #> Periods: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  #>          id trial_period followup_time outcome weight treatment      age_s #>       <int>        <int>         <int>   <num>  <num>     <num>      <num> #>    1:     1            0             0       0      1         1 0.08333333 #>    2:     1            0             1       0      1         1 0.08333333 #>   ---                                                                      #> 1557:    99            0             6       0      1         1 2.50000000 #> 1558:    99            0             7       1      1         0 2.50000000 #>       assigned_treatment sample_weight     w #>                    <num>         <num> <num> #>    1:                  1             1     1 #>    2:                  1             1     1 #>   ---                                        #> 1557:                  1             1     1 #> 1558:                  1             1     1 fit_msm(trial_seq_object, modify_weights = p99_weight) #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Trial Sequence Object  #> Estimand: Intention-to-treat  #>   #> Data:  #>  - N: 725 observations from 89 patients  #>         id period treatment    x1           x2    x3        x4   age      age_s #>      <int>  <int>     <num> <num>        <num> <int>     <num> <num>      <num> #>   1:     1      0         1     1  1.146148362     0 0.7342030    36 0.08333333 #>   2:     1      1         1     1  0.002200337     0 0.7342030    37 0.16666667 #>  ---                                                                            #> 724:    99      6         1     1 -0.033762356     1 0.5752681    71 3.00000000 #> 725:    99      7         0     0 -1.340496520     1 0.5752681    72 3.08333333 #>      outcome censored eligible time_on_regime    wt #>        <num>    <int>    <num>          <num> <num> #>   1:       0        0        1              0     1 #>   2:       0        0        0              1     1 #>  ---                                                #> 724:       0        0        0              1     1 #> 725:       1        0        0              2     1 #>   #> IPW for informative censoring:  #>  - No weight model specified  #>   #> Sequence of Trials Data:  #> - Chunk size: 500  #> - Censor at switch: FALSE  #> - First period: 0 | Last period: Inf  #>   #> A TE Datastore Datatable object  #> N: 1558 observations  #>          id trial_period followup_time outcome weight treatment      age_s #>       <int>        <int>         <int>   <num>  <num>     <num>      <num> #>    1:     1            0             0       0      1         1 0.08333333 #>    2:     1            0             1       0      1         1 0.08333333 #>   ---                                                                      #> 1557:    99            0             6       0      1         1 2.50000000 #> 1558:    99            0             7       1      1         0 2.50000000 #>       assigned_treatment #>                    <num> #>    1:                  1 #>    2:                  1 #>   ---                    #> 1557:                  1 #> 1558:                  1 #>   #> Outcome model:  #> - Formula: outcome ~ assigned_treatment + age_s + stats::poly(followup_time, degree = 2) + trial_period + I(trial_period^2)  #> - Treatment variable: assigned_treatment  #> - Adjustment variables: age_s  #> - Model fitter type: te_stats_glm_logit  #>   #> Model Summary:  #>   #>  term                                    estimate std.error statistic p.value #>  (Intercept)                              -5.46    0.52     -10.60    3.1e-26 #>  assigned_treatment                        1.34    0.53       2.50    1.2e-02 #>  age_s                                     0.48    0.34       1.42    1.5e-01 #>  stats::poly(followup_time, degree = 2)1  -2.23   14.99      -0.15    8.8e-01 #>  stats::poly(followup_time, degree = 2)2 -20.02   14.45      -1.39    1.7e-01 #>  trial_period                              7.05    0.97       7.23    4.8e-13 #>  I(trial_period^2)                        -7.51    0.54     -13.96    2.8e-44 #>  conf.low conf.high #>   -6.47   -4.4      #>    0.29    2.4      #>   -0.18    1.2      #>  -31.60   27.1      #>  -48.34    8.3      #>    5.14    9.0      #>   -8.57   -6.5      #>   #>  null.deviance df.null logLik AIC BIC deviance df.residual nobs #>  160           1557    -68.4  151 188 137      1551        1558 #>   #> Outcome data  #> N: 1558 observations from 89 patients in 18 trial periods  #> Periods: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  #>          id trial_period followup_time outcome weight treatment      age_s #>       <int>        <int>         <int>   <num>  <num>     <num>      <num> #>    1:     1            0             0       0      1         1 0.08333333 #>    2:     1            0             1       0      1         1 0.08333333 #>   ---                                                                      #> 1557:    99            0             6       0      1         1 2.50000000 #> 1558:    99            0             7       1      1         0 2.50000000 #>       assigned_treatment sample_weight     w #>                    <num>         <num> <num> #>    1:                  1             1     1 #>    2:                  1             1     1 #>   ---                                        #> 1557:                  1             1     1 #> 1558:                  1             1     1"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/fit_outcome_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for fitting outcome models — fit_outcome_model","title":"Method for fitting outcome models — fit_outcome_model","text":"Method fitting outcome models","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/fit_outcome_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for fitting outcome models — fit_outcome_model","text":"","code":"fit_outcome_model(object, data, formula, weights = NULL)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/fit_outcome_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for fitting outcome models — fit_outcome_model","text":"object te_outcome_fitter object data data.frame containing outcomes covariates defined formula. formula formula describing model. weights numeric vector weights.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/fit_outcome_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method for fitting outcome models — fit_outcome_model","text":"object class te_outcome_fitted","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/fit_weights_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Method for fitting weight models — fit_weights_model","title":"Method for fitting weight models — fit_weights_model","text":"Method fitting weight models","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/fit_weights_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method for fitting weight models — fit_weights_model","text":"","code":"fit_weights_model(object, data, formula, label)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/fit_weights_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method for fitting weight models — fit_weights_model","text":"object object determining method used, containing slots containing user defined parameters. data data.frame containing outcomes covariates defined formula. formula formula describing model. label short string describing model.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/fit_weights_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method for fitting weight models — fit_weights_model","text":"object class te_weights_fitted","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/fit_weights_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method for fitting weight models — fit_weights_model","text":"","code":"fitter <- stats_glm_logit(tempdir()) data(data_censored) # Not usually called directly by a user fitted <- fit_weights_model(   object = fitter,   data = data_censored,   formula = 1 - censored ~ x1 + age_s + treatment,   label = \"Example model for censoring\" ) fitted #> Model: Example model for censoring  #>   #>  term        estimate  std.error statistic p.value      #>  (Intercept) 1.4373145 0.2417658 5.9450688 2.763407e-09 #>  x1          0.5292698 0.3213183 1.6471823 9.952059e-02 #>  age_s       1.2239608 0.1724601 7.0970652 1.274340e-12 #>  treatment   0.1017731 0.3009513 0.3381712 7.352342e-01 #>   #>  null.deviance df.null logLik    AIC      BIC     deviance df.residual nobs #>  404.2156      724     -167.8072 343.6143 361.959 335.6143 721         725  #>   #>  path                                  #>  /tmp/RtmpGiJAux/model_3314b9cb706.rds #>   unlink(fitted@summary$save_path$path)"},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/initiators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A wrapper function to perform data preparation and model fitting in a sequence of emulated target trials — initiators","text":"","code":"initiators(   data,   id = \"id\",   period = \"period\",   treatment = \"treatment\",   outcome = \"outcome\",   eligible = \"eligible\",   outcome_cov = ~1,   estimand_type = c(\"ITT\", \"PP\", \"As-Treated\"),   model_var = NULL,   switch_n_cov = ~1,   switch_d_cov = ~1,   first_period = NA,   last_period = NA,   first_followup = NA,   last_followup = NA,   use_censor_weights = FALSE,   save_weight_models = FALSE,   analysis_weights = c(\"asis\", \"unweighted\", \"p99\", \"weight_limits\"),   weight_limits = c(0, Inf),   cense = NA,   pool_cense = c(\"none\", \"both\", \"numerator\"),   cense_d_cov = ~1,   cense_n_cov = ~1,   include_followup_time = ~followup_time + I(followup_time^2),   include_trial_period = ~trial_period + I(trial_period^2),   eligible_wts_0 = NA,   eligible_wts_1 = NA,   where_var = NULL,   where_case = NA,   data_dir,   glm_function = \"glm\",   quiet = FALSE,   ... )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/initiators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A wrapper function to perform data preparation and model fitting in a sequence of emulated target trials — initiators","text":"data data.frame containing required variables person-time format, .e.,  `long' format. id Name variable identifiers individuals.  Default `id'. period Name variable visit/period.   Default `period'. treatment Name variable  treatment indicator visit/period. Default `treatment'. outcome Name variable indicator outcome event visit/period.  Default `outcome'. eligible Name variable indicator eligibility target trial visit/period. Default `eligible'. outcome_cov RHS formula baseline covariates adjusted marginal structural model emulated trials. Note time-varying covariate specified outcome_cov, value trial baselines included expanded data. estimand_type Specify estimand causal analyses sequence emulated trials. estimand_type = \"ITT\" perform intention--treat analyses, treatment switching trial baselines ignored. estimand_type = \"PP\" perform per-protocol analyses, individuals' follow-ups artificially censored inverse probability treatment weighting applied. estimand_type = \"-Treated\" fit standard marginal structural model possible treatment sequences, individuals' follow-ups artificially censored  treatment switching trial baselines accounted applying inverse probability treatment weighting. model_var Treatment variables included marginal structural model emulated trials. model_var = \"assigned_treatment\" create variable assigned_treatment assigned treatment trial baseline, typically used ITT per-protocol analyses. model_var = \"dose\" create variable dose cumulative number  treatments received since trial baseline, typically used -treated analyses. switch_n_cov RHS formula specify logistic models estimating numerator terms inverse probability treatment weights. derived variable named time_on_regime containing duration time individual current treatment/non-treatment available use models. switch_d_cov RHS formula specify logistic models estimating denominator terms inverse probability treatment weights. first_period First time period set trial baseline  start expanding data. last_period Last time period set trial baseline  start expanding data. first_followup First follow-time/visit trials included marginal structural model outcome event. last_followup Last follow-time/visit trials included marginal structural model outcome event. use_censor_weights Require inverse probability censoring weights. use_censor_weights = TRUE, variable name censoring indicator needs provided argument cense. save_weight_models Save model objects estimating weights data_dir. analysis_weights Choose type weights used fitting marginal structural model outcome event. \"asis\": use weights calculated. \"p99\": use weights truncated 1st 99th percentiles (based distribution weights entire sample). \"weight_limits\": use weights truncated values specified weight_limits. \"unweighted\": set analysis weights 1, even treatment weights censoring weights calculated. weight_limits Lower upper limits truncate weights, given c(lower, upper) cense Variable name censoring indicator. Required use_censor_weights = TRUE. pool_cense Fit pooled separate censoring models treated untreated immediately previous visit. Pooling can specified models numerator denominator terms inverse probability censoring weights. One \"none\", \"numerator\", \"\" (default \"none\" except estimand_type = \"ITT\" default \"numerator\"). cense_d_cov RHS formula specify logistic models estimating denominator terms inverse probability censoring weights. cense_n_cov RHS formula specify logistic models estimating numerator terms inverse probability censoring weights. include_followup_time model include follow time/visit trial (followup_time) marginal structural model, specified RHS formula. include_trial_period model include trial period (trial_period) marginal structural model, specified RHS formula. eligible_wts_0 See definition eligible_wts_1 eligible_wts_1 Exclude observations fitting models inverse probability treatment weights. example, assumed individual stay treatment least 2 visits, first 2 visits  treatment initiation definition probability staying treatment 1.0 thus excluded weight models treatment immediately previous visit. Users can define variable indicates 2 observations ineligible weight model treatment immediately previous visit add variable name argument eligible_wts_1. Similar definitions applied eligible_wts_0 excluding observations fitting models inverse probability treatment weights treatment immediately previous visit. where_var Specify variable names used define subgroup conditions fitting marginal structural model subgroup individuals. Need specify jointly argument where_case. where_case Define conditions using variables specified where_var fitting marginal structural model subgroup individuals. example, where_var= \"age\", where_case = \"age >= 30\" fit marginal structural model subgroup individuals. 30 years old . data_dir Directory save model objects . glm_function Specify glm function use marginal structural model stats parglm packages. default function glm function stats package. Users can also specify glm_function = \"parglm\" parglm function parglm package can used fitting generalized linear models parallel. default control setting  parglm nthreads = 4 method = \"FAST\", four cores Fisher information used faster computation. Users can change default control setting passing arguments nthreads method parglm.control function parglm package, alternatively, passing control argument list produced parglm.control(nthreads = , method = ). quiet Suppress printing progress messages summaries fitted models. ... Additional arguments passed glm_function. may used specify initial values parameters arguments control. See stats::glm, parglm::parglm parglm::parglm.control() information.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/initiators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A wrapper function to perform data preparation and model fitting in a sequence of emulated target trials — initiators","text":"Returns result trial_msm() expanded data. object class TE_msm containing model glm object robust list containing summary table estimated regression coefficients robust covariance matrix","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/initiators.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A wrapper function to perform data preparation and model fitting in a sequence of emulated target trials — initiators","text":"--one analysis using sequence emulated target trials. provides simplified interface main functions data_preparation() trial_msm().","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/internal-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal Methods — internal-methods","title":"Internal Methods — internal-methods","text":"Various S4 methods directly use users.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/internal-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal Methods — internal-methods","text":"","code":"# S4 method for class 'trial_sequence,data.frame' set_data(   object,   data,   censor_at_switch,   id = \"id\",   period = \"period\",   treatment = \"treatment\",   outcome = \"outcome\",   eligible = \"eligible\" )  # S4 method for class 'trial_sequence' set_expansion_options(   object,   output,   chunk_size = 0,   first_period = 0,   last_period = Inf,   censor_at_switch )  # S4 method for class 'trial_sequence' expand_trials(object)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/internal-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal Methods — internal-methods","text":"object trial_sequence object data data.frame containing required variables person-time format, .e., <U+2018>long<U+2019> format. id Name variable identifiers individuals. Default <U+2018>id<U+2019>. period Name variable visit/period. Default <U+2018>period<U+2019>. treatment Name variable treatment indicator visit/period. Default <U+2018>treatment<U+2019>. outcome Name variable indicator outcome event visit/period. Default <U+2018>outcome<U+2019>. eligible Name variable indicator eligibility target trial visit/period. Default <U+2018>eligible<U+2019>.","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/ipw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IPW Data Accessor and Setter — ipw_data","text":"","code":"ipw_data(object)  ipw_data(object) <- value  # S4 method for class 'trial_sequence' ipw_data(object)  # S4 method for class 'trial_sequence' ipw_data(object) <- value"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/ipw_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IPW Data Accessor and Setter — ipw_data","text":"object trial_sequence object value data.table replace update @data","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/ipw_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IPW Data Accessor and Setter — ipw_data","text":"data @data slot object used inverse probability weighting.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/ipw_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"IPW Data Accessor and Setter — ipw_data","text":"Generic function access update data used inverse probability weighting. setter method ipw_data(object) <- value perform checks manipulations set_data(). completely replace data please use set_data(). ipw_data<- method allows small changes adding new column.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/ipw_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"IPW Data Accessor and Setter — ipw_data","text":"","code":"ts <- trial_sequence(\"ITT\") ts <- set_data(ts, data_censored) ipw_data(ts) #> Key: <id> #> Indices: <first>, <am_1> #>         id period treatment    x1           x2    x3        x4   age      age_s #>      <int>  <int>     <num> <num>        <num> <int>     <num> <num>      <num> #>   1:     1      0         1     1  1.146148362     0 0.7342030    36 0.08333333 #>   2:     1      1         1     1  0.002200337     0 0.7342030    37 0.16666667 #>   3:     1      2         1     0 -0.481762418     0 0.7342030    38 0.25000000 #>   4:     1      3         1     0  0.007872396     0 0.7342030    39 0.33333333 #>   5:     1      4         1     1  0.216053715     0 0.7342030    40 0.41666667 #>  ---                                                                            #> 721:    99      3         0     0 -0.747905701     1 0.5752681    68 2.75000000 #> 722:    99      4         0     0 -0.790056043     1 0.5752681    69 2.83333333 #> 723:    99      5         1     1  0.387429397     1 0.5752681    70 2.91666667 #> 724:    99      6         1     1 -0.033762356     1 0.5752681    71 3.00000000 #> 725:    99      7         0     0 -1.340496520     1 0.5752681    72 3.08333333 #>      outcome censored eligible time_of_event  first  am_1  cumA switch #>        <num>    <int>    <num>         <num> <lgcl> <num> <num>  <num> #>   1:       0        0        1          9999   TRUE     0     1      0 #>   2:       0        0        0          9999  FALSE     1     2      0 #>   3:       0        0        0          9999  FALSE     1     3      0 #>   4:       0        0        0          9999  FALSE     1     4      0 #>   5:       0        0        0          9999  FALSE     1     5      0 #>  ---                                                                   #> 721:       0        0        0             7  FALSE     0     2      0 #> 722:       0        0        0             7  FALSE     0     2      0 #> 723:       0        0        0             7  FALSE     0     3      1 #> 724:       0        0        0             7  FALSE     1     4      0 #> 725:       1        0        0             7  FALSE     1     4      1 #>      regime_start time_on_regime eligible0 eligible1 #>             <int>          <num>     <num>     <num> #>   1:            0              0         1         0 #>   2:            0              1         0         1 #>   3:            0              2         0         1 #>   4:            0              3         0         1 #>   5:            0              4         0         1 #>  ---                                                 #> 721:            2              1         1         0 #> 722:            2              2         1         0 #> 723:            5              3         1         0 #> 724:            5              1         0         1 #> 725:            7              2         0         1 data.table::set(ipw_data(ts), j = \"dummy\", value = TRUE)  # or with the setter method: new_data <- ipw_data(ts) new_data$x2sq <- new_data$x2^2 ipw_data(ts) <- new_data"},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/load_expanded_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method to read, subset and sample expanded data — load_expanded_data","text":"","code":"load_expanded_data(   object,   p_control = NULL,   period = NULL,   subset_condition = NULL,   seed = NULL )  # S4 method for class 'trial_sequence' load_expanded_data(   object,   p_control = NULL,   period = NULL,   subset_condition = NULL,   seed = NULL )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/load_expanded_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method to read, subset and sample expanded data — load_expanded_data","text":"object object class trial_sequence. p_control Probability selecting control, NULL sampling (default). period integerish vector non-zero length select trial period(s) NULL (default) select trial periods. subset_condition string NULL (default). subset_condition translated call (case expanded data saved data.table csv format) SQL-query (case expanded data saved duckdb file). operators \"==\", \"!=\", \">\", \">=\", \"<\", \"<=\", %%\", \"&\", \"|\" supported. Numeric vectors can written c(1, 2, 3) 1:3. Variables supported. Note: Make sure numeric vectors written 1:3 surrounded spaces, e.g. %% c( 1:4 , 6:9 ), otherwise code fail. seed integer seed NULL (default). Note: seed return different result depending class te_datastore object contained trial_sequence object.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/load_expanded_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method to read, subset and sample expanded data — load_expanded_data","text":"updated trial_sequence object, data stored slot @outcome_data te_outcome_data object.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/load_expanded_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Method to read, subset and sample expanded data — load_expanded_data","text":"method used trial_sequence objects read, subset sample expanded data.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/load_expanded_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method to read, subset and sample expanded data — load_expanded_data","text":"","code":"# create a trial_sequence-class object trial_itt_dir <- file.path(tempdir(), \"trial_itt\") dir.create(trial_itt_dir) trial_itt <- trial_sequence(estimand = \"ITT\") |>   set_data(data = data_censored) |>   set_outcome_model(adjustment_terms = ~ x1 + x2)  trial_itt_csv <- set_expansion_options(   trial_itt,   output = save_to_csv(file.path(trial_itt_dir, \"trial_csvs\")),   chunk_size = 500 ) |>   expand_trials()  # load_expanded_data default behaviour returns all trial_periods and doesn't sample load_expanded_data(trial_itt_csv) #> Trial Sequence Object  #> Estimand: Intention-to-treat  #>   #> Data:  #>  - N: 725 observations from 89 patients  #>         id period treatment    x1           x2    x3        x4   age      age_s #>      <int>  <int>     <num> <num>        <num> <int>     <num> <num>      <num> #>   1:     1      0         1     1  1.146148362     0 0.7342030    36 0.08333333 #>   2:     1      1         1     1  0.002200337     0 0.7342030    37 0.16666667 #>  ---                                                                            #> 724:    99      6         1     1 -0.033762356     1 0.5752681    71 3.00000000 #> 725:    99      7         0     0 -1.340496520     1 0.5752681    72 3.08333333 #>      outcome censored eligible time_on_regime    wt #>        <num>    <int>    <num>          <num> <num> #>   1:       0        0        1              0     1 #>   2:       0        0        0              1     1 #>  ---                                                #> 724:       0        0        0              1     1 #> 725:       1        0        0              2     1 #>   #> IPW for informative censoring:  #>  - No weight model specified  #>   #> Sequence of Trials Data:  #> - Chunk size: 500  #> - Censor at switch: FALSE  #> - First period: 0 | Last period: Inf  #>   #> A TE Datastore CSV object  #> N: 1558 observations  #> Periods: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  #> Path: /tmp/RtmpGiJAux/trial_itt/trial_csvs  #> Columns: id, trial_period, followup_time, outcome, weight, treatment, x1, x2, assigned_treatment  #>   #> Outcome model:  #> - Formula: outcome ~ assigned_treatment + x1 + x2 + followup_time + I(followup_time^2) + trial_period + I(trial_period^2)  #> - Treatment variable: assigned_treatment  #> - Adjustment variables: x1 x2  #> - Model fitter type: te_stats_glm_logit  #>   #> Use fit_msm() to fit the outcome model  #>   #> Outcome data  #> N: 1558 observations from 89 patients in 18 trial periods  #> Periods: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  #>          id trial_period followup_time outcome weight treatment    x1       x2 #>       <int>        <int>         <int>   <int>  <int>     <int> <int>    <num> #>    1:     1            0             0       0      1         1     1 1.146148 #>    2:     1            0             1       0      1         1     1 1.146148 #>   ---                                                                          #> 1557:    54           17             1       0      1         0     0 1.846423 #> 1558:    54           17             2       0      1         0     0 1.846423 #>       assigned_treatment sample_weight #>                    <int>         <num> #>    1:                  1             1 #>    2:                  1             1 #>   ---                                  #> 1557:                  1             1 #> 1558:                  1             1  # load_expanded_data can subset the data before sampling load_expanded_data(   trial_itt_csv,   p_control = 0.2,   period = 1:20,   subset_condition = \"followup_time %in% 1:20 & x2 < 1\", ) #> Warning: The following periods don't exist in the data and were omitted: 18, 19, 20 #> Trial Sequence Object  #> Estimand: Intention-to-treat  #>   #> Data:  #>  - N: 725 observations from 89 patients  #>         id period treatment    x1           x2    x3        x4   age      age_s #>      <int>  <int>     <num> <num>        <num> <int>     <num> <num>      <num> #>   1:     1      0         1     1  1.146148362     0 0.7342030    36 0.08333333 #>   2:     1      1         1     1  0.002200337     0 0.7342030    37 0.16666667 #>  ---                                                                            #> 724:    99      6         1     1 -0.033762356     1 0.5752681    71 3.00000000 #> 725:    99      7         0     0 -1.340496520     1 0.5752681    72 3.08333333 #>      outcome censored eligible time_on_regime    wt #>        <num>    <int>    <num>          <num> <num> #>   1:       0        0        1              0     1 #>   2:       0        0        0              1     1 #>  ---                                                #> 724:       0        0        0              1     1 #> 725:       1        0        0              2     1 #>   #> IPW for informative censoring:  #>  - No weight model specified  #>   #> Sequence of Trials Data:  #> - Chunk size: 500  #> - Censor at switch: FALSE  #> - First period: 0 | Last period: Inf  #>   #> A TE Datastore CSV object  #> N: 1558 observations  #> Periods: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  #> Path: /tmp/RtmpGiJAux/trial_itt/trial_csvs  #> Columns: id, trial_period, followup_time, outcome, weight, treatment, x1, x2, assigned_treatment  #>   #> Outcome model:  #> - Formula: outcome ~ assigned_treatment + x1 + x2 + followup_time + I(followup_time^2) + trial_period + I(trial_period^2)  #> - Treatment variable: assigned_treatment  #> - Adjustment variables: x1 x2  #> - Model fitter type: te_stats_glm_logit  #>   #> Use fit_msm() to fit the outcome model  #>   #> Outcome data  #> N: 133 observations from 26 patients in 15 trial periods  #> Periods: 1 2 3 4 5 6 7 8 9 10 12 13 14 15 16  #> Subset condition: followup_time %in% 1:20 & x2 < 1  #> Sampling control observations with probability: 0.2  #>         id trial_period followup_time outcome weight treatment    x1 #>      <int>        <int>         <int>   <int>  <int>     <int> <int> #>   1:    47            1             1       0      1         1     1 #>   2:    49            1             1       0      1         0     0 #>  ---                                                                 #> 132:    54           15             3       0      1         0     0 #> 133:    54           16             1       0      1         1     1 #>                x2 assigned_treatment sample_weight #>             <num>              <int>         <num> #>   1: -0.003948516                  1             5 #>   2: -2.268706541                  1             5 #>  ---                                               #> 132:  0.685072164                  0             5 #> 133:  0.817996441                  0             5  # delete after use unlink(trial_itt_dir, recursive = TRUE)"},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/outcome_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome Data Accessor and Setter — outcome_data","text":"","code":"outcome_data(object)  outcome_data(object) <- value  # S4 method for class 'trial_sequence' outcome_data(object)  # S4 method for class 'trial_sequence' outcome_data(object) <- value"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/outcome_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome Data Accessor and Setter — outcome_data","text":"object trial_sequence object value data.table replace update @outcome_data","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/outcome_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Outcome Data Accessor and Setter — outcome_data","text":"object updated outcome data","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/outcome_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Outcome Data Accessor and Setter — outcome_data","text":"Generic function outcome data","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/outcome_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Outcome Data Accessor and Setter — outcome_data","text":"","code":"ts <- trial_sequence(\"ITT\") new_data <- data.table::data.table(vignette_switch_data[1:200, ]) new_data$weight <- 1 outcome_data(ts) <- new_data"},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/parsnip_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit outcome models using parsnip models — parsnip_model","text":"","code":"parsnip_model(model_spec, save_path)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/parsnip_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit outcome models using parsnip models — parsnip_model","text":"model_spec parsnip model definition mode = \"classification\". save_path Directory save models. Set NA models saved.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/parsnip_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit outcome models using parsnip models — parsnip_model","text":"object class te_parsnip_model inheriting te_model_fitter used dispatching methods fitting models.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/parsnip_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit outcome models using parsnip models — parsnip_model","text":"Specify models fit using classification model specified parsnip package. Warning: functionality experimental recommended use analyses. \\(sqrt{n}\\)-consistency estimation valid inference parameters marginal structural models emulated trials generally require weights treatment switching censoring estimated parametric rates, generally possible using data-adaptive estimation high-dimensional regressions. Therefore, recommend using stats_glm_logit().","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/parsnip_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit outcome models using parsnip models — parsnip_model","text":"","code":"if (FALSE) { # \\dontrun{ if (   requireNamespace(\"parsnip\", quietly = TRUE) &&     requireNamespace(\"rpart\", quietly = TRUE) ) {   # Use a decision tree model fitted with the rpart package   parsnip_model(     model_spec = parsnip::decision_tree(tree_depth = 30) |>       set_mode(\"classification\") |>       set_engine(\"rpart\"),     save_path = tempdir()   ) } } # }"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/predict_marginal.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict marginal cumulative incidences with confidence intervals for a target trial population — predict_marginal","title":"Predict marginal cumulative incidences with confidence intervals for a target trial population — predict_marginal","text":"function predicts marginal cumulative incidences target trial population receives either treatment non-treatment baseline (intention--treat analysis) either sustained treatment sustained non-treatment (per-protocol analysis). difference cumulative incidences estimated causal effect treatment. Currently, predict function provides marginal intention--treat per-protocol effects, therefore valid estimand_type = \"ITT\" estimand_type = \"PP\".","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/predict_marginal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict marginal cumulative incidences with confidence intervals for a target trial population — predict_marginal","text":"","code":"predict(object, ...)  # S4 method for class 'trial_sequence_ITT' predict(   object,   newdata,   predict_times,   conf_int = TRUE,   samples = 100,   type = c(\"cum_inc\", \"survival\") )  # S4 method for class 'trial_sequence_PP' predict(   object,   newdata,   predict_times,   conf_int = TRUE,   samples = 100,   type = c(\"cum_inc\", \"survival\") )  # S3 method for class 'TE_msm' predict(   object,   newdata,   predict_times,   conf_int = TRUE,   samples = 100,   type = c(\"cum_inc\", \"survival\"),   ... )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/predict_marginal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict marginal cumulative incidences with confidence intervals for a target trial population — predict_marginal","text":"object Object trial_msm() initiators() trial_sequence. ... arguments passed methods. newdata Baseline trial data characterise target trial population marginal cumulative incidences survival probabilities predicted .  newdata must columns formats variables fitted marginal structural model specified trial_msm() initiators(). newdata contains rows followup_time > 0 removed. predict_times Specify follow-visits/times marginal cumulative incidences survival probabilities predicted. conf_int Construct point-wise 95-percent confidence intervals cumulative incidences target trial population treatment non-treatment differences simulating parameters marginal structural model multivariate normal distribution mean equal marginal structural model parameter estimates variance equal estimated robust covariance matrix. samples Number samples used construct simulation-based confidence intervals. type Specify cumulative incidences survival probabilities predicted. Either cumulative incidence (\"cum_inc\") survival probability (\"survival\").","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/predict_marginal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict marginal cumulative incidences with confidence intervals for a target trial population — predict_marginal","text":"list three data frames containing cumulative incidences assigned treatment options (treatment non-treatment) difference .","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/predict_marginal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict marginal cumulative incidences with confidence intervals for a target trial population — predict_marginal","text":"","code":"# Prediction for initiators() or trial_msm() objects -----  # If necessary set the number of `data.table` threads data.table::setDTthreads(2)  data(\"te_model_ex\") predicted_ci <- predict(te_model_ex, predict_times = 0:30, samples = 10)  # Plot the cumulative incidence curves under treatment and non-treatment plot(predicted_ci[[1]]$followup_time, predicted_ci[[1]]$cum_inc,   type = \"l\",   xlab = \"Follow-up Time\", ylab = \"Cumulative Incidence\",   ylim = c(0, 0.7) ) lines(predicted_ci[[1]]$followup_time, predicted_ci[[1]]$`2.5%`, lty = 2) lines(predicted_ci[[1]]$followup_time, predicted_ci[[1]]$`97.5%`, lty = 2)  lines(predicted_ci[[2]]$followup_time, predicted_ci[[2]]$cum_inc, type = \"l\", col = 2) lines(predicted_ci[[2]]$followup_time, predicted_ci[[2]]$`2.5%`, lty = 2, col = 2) lines(predicted_ci[[2]]$followup_time, predicted_ci[[2]]$`97.5%`, lty = 2, col = 2) legend(\"topleft\", title = \"Assigned Treatment\", legend = c(\"0\", \"1\"), col = 1:2, lty = 1)   # Plot the difference in cumulative incidence over follow up plot(predicted_ci[[3]]$followup_time, predicted_ci[[3]]$cum_inc_diff,   type = \"l\",   xlab = \"Follow-up Time\", ylab = \"Difference in Cumulative Incidence\",   ylim = c(0.0, 0.5) ) lines(predicted_ci[[3]]$followup_time, predicted_ci[[3]]$`2.5%`, lty = 2) lines(predicted_ci[[3]]$followup_time, predicted_ci[[3]]$`97.5%`, lty = 2)"},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/print_TE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a weight summary object — print.TE_weight_summary","text":"","code":"# S3 method for class 'TE_weight_summary' print(x, full = TRUE, ...)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/print_TE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a weight summary object — print.TE_weight_summary","text":"x print TE_weight_summary object. full Print full short summary. ... Arguments passed print.data.frame.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/print_TE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a weight summary object — print.TE_weight_summary","text":"return value, printing.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/read_expanded_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Method to read expanded data — read_expanded_data","title":"Method to read expanded data — read_expanded_data","text":"method used te_datastore objects read selected data return one data.table.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/read_expanded_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method to read expanded data — read_expanded_data","text":"","code":"read_expanded_data(object, period = NULL, subset_condition = NULL)  # S4 method for class 'te_datastore_datatable' read_expanded_data(object, period = NULL, subset_condition = NULL)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/read_expanded_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method to read expanded data — read_expanded_data","text":"object object class te_datastore. period integerish vector non-zero length select trial period(s) NULL (default) select files. subset_condition string length 1 NULL (default).","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/read_expanded_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method to read expanded data — read_expanded_data","text":"data.frame class data.table.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/read_expanded_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method to read expanded data — read_expanded_data","text":"","code":"# create a te_datastore_csv object and save some data temp_dir <- tempfile(\"csv_dir_\") dir.create(temp_dir) datastore <- save_to_csv(temp_dir) data(vignette_switch_data) expanded_csv_data <- save_expanded_data(datastore, vignette_switch_data[1:200, ])  # read expanded data read_expanded_data(expanded_csv_data) #>         id trial_period followup_time outcome weight treatment catvarA catvarB #>      <int>        <int>         <int>   <int>  <int>     <int>   <int>   <int> #>   1:     1          261             0       0      1         0       2       1 #>   2:     1          261             1       0      1         0       2       1 #>   3:     1          261             2       0      1         0       2       1 #>   4:     1          261             3       0      1         0       2       1 #>   5:     1          261             4       0      1         0       2       1 #>  ---                                                                           #> 196:     1          277             1       0      1         0       1       1 #> 197:     1          277             2       0      1         0       1       1 #> 198:     1          278             0       0      1         0       1       1 #> 199:     1          278             1       0      1         0       1       1 #> 200:     1          279             0       0      1         0       1       1 #>      catvarC nvarA nvarB nvarC assigned_treatment #>        <int> <int> <int> <int>              <int> #>   1:       0     1    15    70                  0 #>   2:       0     1    15    70                  0 #>   3:       0     1    15    70                  0 #>   4:       0     1    15    70                  0 #>   5:       0     1    15    70                  0 #>  ---                                              #> 196:       0     0    10    72                  0 #> 197:       0     0    10    72                  0 #> 198:       1     0    10    72                  0 #> 199:       1     0    10    72                  0 #> 200:       1     0    11    72                  0  # delete after use unlink(temp_dir, recursive = TRUE)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/robust_calculation.html","id":null,"dir":"Reference","previous_headings":"","what":"Robust Variance Calculation — robust_calculation","title":"Robust Variance Calculation — robust_calculation","text":"function performs calculation robust standard errors based variances estimated using sandwich::vcovCL.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/robust_calculation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robust Variance Calculation — robust_calculation","text":"","code":"robust_calculation(model, data_id)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/robust_calculation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robust Variance Calculation — robust_calculation","text":"model logistic regression model object. data_id Values id column data (ie data[, id]) identify clusters.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/robust_calculation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robust Variance Calculation — robust_calculation","text":"list elements summary, table model summary using robust variance estimates, matrix, sandwich covariance matrix.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/sample_expanded_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal method to sample expanded data — sample_expanded_data","title":"Internal method to sample expanded data — sample_expanded_data","text":"Internal method sample expanded data","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/sample_expanded_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal method to sample expanded data — sample_expanded_data","text":"","code":"sample_expanded_data(   object,   p_control,   period = NULL,   subset_condition = NULL,   seed )  # S4 method for class 'te_datastore' sample_expanded_data(   object,   p_control,   period = NULL,   subset_condition = NULL,   seed )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/sample_expanded_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal method to sample expanded data — sample_expanded_data","text":"object object class te_datastore. p_control Probability selecting control. period integerish vector non-zero length select trial period(s) NULL (default) select trial periods. subset_condition string NULL. seed integer seed NULL (default).","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/sample_expanded_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal method to sample expanded data — sample_expanded_data","text":"data.frame class data.table.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/sample_expanded_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal method to sample expanded data — sample_expanded_data","text":"","code":"# Data object normally created by [expand_trials] datastore <- new(\"te_datastore_datatable\", data = te_data_ex$data, N = 50139L)  sample_expanded_data(datastore, period = 260:275, p_control = 0.2, seed = 123) #>          id trial_period followup_time outcome weight treatment nvarA catvarA #>       <int>        <int>         <int>   <num>  <num>     <int> <int>  <fctr> #>    1:   101          260             0       0      1         0     0       0 #>    2:   127          260             0       0      1         0     1       0 #>    3:    94          260             0       0      1         0     0       1 #>    4:    13          260             0       0      1         1     1       0 #>    5:   108          261             0       0      1         0     1       0 #>   ---                                                                         #> 7717:     5          261           135       0      1         1     0       0 #> 7718:    24          261           135       0      1         1     0       2 #> 7719:     5          260           136       0      1         1     0       0 #> 7720:    24          260           136       0      1         1     0       2 #> 7721:   103          260           136       0      1         0     0       0 #>       assigned_treatment sample_weight #>                    <int>         <num> #>    1:                  0             5 #>    2:                  0             5 #>    3:                  0             5 #>    4:                  1             5 #>    5:                  0             5 #>   ---                                  #> 7717:                  0             5 #> 7718:                  0             5 #> 7719:                  0             5 #> 7720:                  0             5 #> 7721:                  0             5"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/save_expanded_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Method to save expanded data — save_expanded_data","title":"Method to save expanded data — save_expanded_data","text":"method used internally expand_trials save data \"datastore\" defined set_expansion_options.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/save_expanded_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method to save expanded data — save_expanded_data","text":"","code":"save_expanded_data(object, data)  # S4 method for class 'te_datastore_datatable' save_expanded_data(object, data)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/save_expanded_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method to save expanded data — save_expanded_data","text":"object object class te_datastore child class. data data frame containing expanded trial data. columns trial_period id present, may used methods save data optimal way, indexes, keys separate files.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/save_expanded_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method to save expanded data — save_expanded_data","text":"updated object data stored. Notably object@N increased","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/save_expanded_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Method to save expanded data — save_expanded_data","text":"","code":"temp_dir <- tempfile(\"csv_dir_\") dir.create(temp_dir) datastore <- save_to_csv(temp_dir) data(vignette_switch_data) save_expanded_data(datastore, vignette_switch_data[1:200, ]) #> A TE Datastore CSV object  #> N: 200 observations  #> Periods: 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279  #> Path: /tmp/RtmpGiJAux/csv_dir_33147ead4e7  #> Columns: id, trial_period, followup_time, outcome, weight, treatment, catvarA, catvarB, catvarC, nvarA, nvarB, nvarC, assigned_treatment   # delete after use unlink(temp_dir, recursive = TRUE)"},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/save_to_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save expanded data as CSV — save_to_csv","text":"","code":"save_to_csv(path)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/save_to_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save expanded data as CSV — save_to_csv","text":"path Directory save CSV files . Must empty.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/save_to_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save expanded data as CSV — save_to_csv","text":"te_datastore_csv object.","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/save_to_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save expanded data as CSV — save_to_csv","text":"","code":"csv_dir <- file.path(tempdir(), \"expanded_trials_csv\") dir.create(csv_dir) csv_datastore <- save_to_csv(path = csv_dir)  trial_to_expand <- trial_sequence(\"ITT\") |>   set_data(data = data_censored) |>   set_expansion_options(output = csv_datastore, chunk_size = 500)  # Delete directory after use unlink(csv_dir)"},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/save_to_datatable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save expanded data as a data.table — save_to_datatable","text":"","code":"save_to_datatable()"},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/save_to_datatable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save expanded data as a data.table — save_to_datatable","text":"","code":"trial_to_expand <- trial_sequence(\"ITT\") |>   set_data(data = data_censored) |>   set_expansion_options(output = save_to_datatable(), chunk_size = 500)"},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/save_to_duckdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save expanded data to DuckDB — save_to_duckdb","text":"","code":"save_to_duckdb(path)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/save_to_duckdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save expanded data to DuckDB — save_to_duckdb","text":"path Directory save DuckDB database file .","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/save_to_duckdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save expanded data to DuckDB — save_to_duckdb","text":"te_datastore_duckdb object.","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/save_to_duckdb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save expanded data to DuckDB — save_to_duckdb","text":"","code":"if (require(duckdb)) {   duckdb_dir <- file.path(tempdir(), \"expanded_trials_duckdb\")    trial_to_expand <- trial_sequence(\"ITT\") |>     set_data(data = data_censored) |>     set_expansion_options(output = save_to_duckdb(path = duckdb_dir), chunk_size = 500)    # Delete directory after use   unlink(duckdb_dir) } #> Loading required package: duckdb #> Loading required package: DBI"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/select_data_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Data Columns — select_data_cols","title":"Select Data Columns — select_data_cols","text":"Select required columns data rename","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/select_data_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Data Columns — select_data_cols","text":"","code":"select_data_cols(data, args)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/select_data_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Data Columns — select_data_cols","text":"data data.frame containing required columns args List arguments data_preparation","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/select_data_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Data Columns — select_data_cols","text":"data.table required columns","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_censor_weight_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set censoring weight model — set_censor_weight_model","text":"","code":"set_censor_weight_model(   object,   censor_event,   numerator,   denominator,   pool_models = NULL,   model_fitter )  # S4 method for class 'trial_sequence' set_censor_weight_model(   object,   censor_event,   numerator,   denominator,   pool_models = c(\"none\", \"both\", \"numerator\"),   model_fitter = stats_glm_logit() )  # S4 method for class 'trial_sequence_PP' set_censor_weight_model(   object,   censor_event,   numerator,   denominator,   pool_models = \"none\",   model_fitter = stats_glm_logit() )  # S4 method for class 'trial_sequence_ITT' set_censor_weight_model(   object,   censor_event,   numerator,   denominator,   pool_models = \"numerator\",   model_fitter = stats_glm_logit() )  # S4 method for class 'trial_sequence_AT' set_censor_weight_model(   object,   censor_event,   numerator,   denominator,   pool_models = \"none\",   model_fitter = stats_glm_logit() )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_censor_weight_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set censoring weight model — set_censor_weight_model","text":"object trial_sequence. censor_event string. Name column containing censoring indicator. numerator RHS formula specify logistic models estimating numerator terms inverse probability censoring weights. denominator RHS formula specify logistic models estimating denominator terms inverse probability censoring weights. pool_models Fit pooled separate censoring models treated untreated immediately previous visit. Pooling can specified models numerator denominator terms inverse probability censoring weights. One \"none\", \"numerator\", \"\" (default \"none\" except estimand = \"ITT\" default \"numerator\"). model_fitter object class  te_model_fitter determines method used fitting weight models. logistic regression use stats_glm_logit().","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_censor_weight_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set censoring weight model — set_censor_weight_model","text":"object returned @censor_weights set","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_censor_weight_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set censoring weight model — set_censor_weight_model","text":"","code":"trial_sequence(\"ITT\") |>   set_data(data = data_censored) |>   set_censor_weight_model(     censor_event = \"censored\",     numerator = ~ age_s + x1 + x3,     denominator = ~ x3 + x4,     pool_models = \"both\",     model_fitter = stats_glm_logit(save_path = tempdir())   ) #> Trial Sequence Object  #> Estimand: Intention-to-treat  #>   #> Data:  #>  - N: 725 observations from 89 patients  #>         id period treatment    x1           x2    x3        x4   age      age_s #>      <int>  <int>     <num> <num>        <num> <int>     <num> <num>      <num> #>   1:     1      0         1     1  1.146148362     0 0.7342030    36 0.08333333 #>   2:     1      1         1     1  0.002200337     0 0.7342030    37 0.16666667 #>  ---                                                                            #> 724:    99      6         1     1 -0.033762356     1 0.5752681    71 3.00000000 #> 725:    99      7         0     0 -1.340496520     1 0.5752681    72 3.08333333 #>      outcome censored eligible time_on_regime #>        <num>    <int>    <num>          <num> #>   1:       0        0        1              0 #>   2:       0        0        0              1 #>  ---                                          #> 724:       0        0        0              1 #> 725:       1        0        0              2 #>   #> IPW for informative censoring:  #>  - Numerator formula: 1 - censored ~ age_s + x1 + x3  #>  - Denominator formula: 1 - censored ~ x3 + x4  #>  - Numerator and denominotor models are pooled across treatment arms.  #>  - Model fitter type: te_stats_glm_logit  #>  - Weight models not fitted. Use calculate_weights()  #>   #> Sequence of Trials Data:  #> - Use set_expansion_options() and expand_trials() to construct the sequence of trials dataset.  #>   #> Outcome model:  #>  - Outcome model not specified. Use set_outcome_model()"},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the trial data — set_data","text":"","code":"set_data(object, data, ...)  # S4 method for class 'trial_sequence_ITT,data.frame' set_data(   object,   data,   id = \"id\",   period = \"period\",   treatment = \"treatment\",   outcome = \"outcome\",   eligible = \"eligible\" )  # S4 method for class 'trial_sequence_AT,data.frame' set_data(   object,   data,   id = \"id\",   period = \"period\",   treatment = \"treatment\",   outcome = \"outcome\",   eligible = \"eligible\" )  # S4 method for class 'trial_sequence_PP,data.frame' set_data(   object,   data,   id = \"id\",   period = \"period\",   treatment = \"treatment\",   outcome = \"outcome\",   eligible = \"eligible\" )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the trial data — set_data","text":"object trial_sequence object data data.frame containing required variables person-time format, .e., <U+2018>long<U+2019> format. ... arguments used methods internally. id Name variable identifiers individuals. Default <U+2018>id<U+2019>. period Name variable visit/period. Default <U+2018>period<U+2019>. treatment Name variable treatment indicator visit/period. Default <U+2018>treatment<U+2019>. outcome Name variable indicator outcome event visit/period. Default <U+2018>outcome<U+2019>. eligible Name variable indicator eligibility target trial visit/period. Default <U+2018>eligible<U+2019>.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the trial data — set_data","text":"updated trial_sequence object data","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the trial data — set_data","text":"","code":"data(trial_example) trial_sequence(\"ITT\") |>   set_data(     data = trial_example,     id = \"id\",     period = \"period\",     eligible = \"eligible\",     treatment = \"treatment\"   ) #> Trial Sequence Object  #> Estimand: Intention-to-treat  #>   #> Data:  #>  - N: 48400 observations from 503 patients  #>           id eligible period outcome treatment catvarA catvarB catvarC nvarA #>        <int>    <int>  <int>   <int>     <int>   <int>   <int>   <int> <int> #>     1:     1        1    261       0         0       2       1       0     1 #>     2:     1        1    262       0         0       2       1       0     1 #>    ---                                                                       #> 48399:   503        0    271       0         0       0       2       0     0 #> 48400:   503        0    272       1         1       0       2       0     0 #>        nvarB nvarC time_on_regime #>        <int> <int>          <num> #>     1:    15    70              0 #>     2:    15    70              1 #>    ---                            #> 48399:    63    64             37 #> 48400:    78    64              1 #>   #> IPW for informative censoring:  #>  - No weight model specified  #>   #> Sequence of Trials Data:  #> - Use set_expansion_options() and expand_trials() to construct the sequence of trials dataset.  #>   #> Outcome model:  #>  - Outcome model not specified. Use set_outcome_model()"},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_expansion_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set expansion options — set_expansion_options","text":"","code":"set_expansion_options(object, ...)  # S4 method for class 'trial_sequence_ITT' set_expansion_options(   object,   output,   chunk_size,   first_period = 0,   last_period = Inf )  # S4 method for class 'trial_sequence_PP' set_expansion_options(   object,   output,   chunk_size,   first_period = 0,   last_period = Inf )  # S4 method for class 'trial_sequence_ITT' set_expansion_options(   object,   output,   chunk_size,   first_period = 0,   last_period = Inf )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_expansion_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set expansion options — set_expansion_options","text":"object trial_sequence object ... Arguments used methods output te_datastore object created save_to_* function. chunk_size integer specifying number patients include expansion iteration first_period integer specifying first period include expansion last_period integer specifying last period include expansion","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_expansion_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set expansion options — set_expansion_options","text":"object returned @expansion set","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_expansion_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set expansion options — set_expansion_options","text":"","code":"output_dir <- file.path(tempdir(check = TRUE), \"expanded_data\") ITT_trial <- trial_sequence(\"ITT\") |>   set_data(data = data_censored) |>   set_expansion_options(output = save_to_csv(output_dir), chunk_size = 500)  # Delete directory unlink(output_dir, recursive = TRUE)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_outcome_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify the outcome model — set_outcome_model","title":"Specify the outcome model — set_outcome_model","text":"time--event model outcome specified method. adjustment terms can specified. ITT PP estimands treatment_var specified automatically defined assigned_treatment. Importantly, modelling \"time\" specified model arguments trial start time follow time within trial.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_outcome_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify the outcome model — set_outcome_model","text":"","code":"set_outcome_model(object, ...)  # S4 method for class 'trial_sequence' set_outcome_model(   object,   treatment_var = ~0,   adjustment_terms = ~1,   followup_time_terms = ~followup_time + I(followup_time^2),   trial_period_terms = ~trial_period + I(trial_period^2),   model_fitter = stats_glm_logit(save_path = NA) )  # S4 method for class 'trial_sequence_ITT' set_outcome_model(   object,   adjustment_terms = ~1,   followup_time_terms = ~followup_time + I(followup_time^2),   trial_period_terms = ~trial_period + I(trial_period^2),   model_fitter = stats_glm_logit(save_path = NA) )  # S4 method for class 'trial_sequence_PP' set_outcome_model(   object,   adjustment_terms = ~1,   followup_time_terms = ~followup_time + I(followup_time^2),   trial_period_terms = ~trial_period + I(trial_period^2),   model_fitter = stats_glm_logit(save_path = NA) )  # S4 method for class 'trial_sequence_AT' set_outcome_model(   object,   treatment_var = \"dose\",   adjustment_terms = ~1,   followup_time_terms = ~followup_time + I(followup_time^2),   trial_period_terms = ~trial_period + I(trial_period^2),   model_fitter = stats_glm_logit(save_path = NA) )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_outcome_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify the outcome model — set_outcome_model","text":"object trial_sequence object ... Parameters used methods treatment_var treatment term, used \"treated\" estimands. PP ITT fixed use \"assigned_treatment\". adjustment_terms Formula terms covariates adjust outcome model. followup_time_terms Formula terms followup_time, time period relative start trial. trial_period_terms Formula terms trial_period, time period start trial. model_fitter te_model_fitter object, e.g. stats_glm_logit().","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_outcome_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify the outcome model — set_outcome_model","text":"modified object outcome_model slot set","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_outcome_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify the outcome model — set_outcome_model","text":"","code":"trial_sequence(\"ITT\") |>   set_data(data_censored) |>   set_outcome_model(     adjustment_terms = ~age_s,     followup_time_terms = ~ stats::poly(followup_time, degree = 2)   ) #> Trial Sequence Object  #> Estimand: Intention-to-treat  #>   #> Data:  #>  - N: 725 observations from 89 patients  #>         id period treatment    x1           x2    x3        x4   age      age_s #>      <int>  <int>     <num> <num>        <num> <int>     <num> <num>      <num> #>   1:     1      0         1     1  1.146148362     0 0.7342030    36 0.08333333 #>   2:     1      1         1     1  0.002200337     0 0.7342030    37 0.16666667 #>  ---                                                                            #> 724:    99      6         1     1 -0.033762356     1 0.5752681    71 3.00000000 #> 725:    99      7         0     0 -1.340496520     1 0.5752681    72 3.08333333 #>      outcome censored eligible time_on_regime #>        <num>    <int>    <num>          <num> #>   1:       0        0        1              0 #>   2:       0        0        0              1 #>  ---                                          #> 724:       0        0        0              1 #> 725:       1        0        0              2 #>   #> IPW for informative censoring:  #>  - No weight model specified  #>   #> Sequence of Trials Data:  #> - Use set_expansion_options() and expand_trials() to construct the sequence of trials dataset.  #>   #> Outcome model:  #> - Formula: outcome ~ assigned_treatment + age_s + stats::poly(followup_time, degree = 2) + trial_period + I(trial_period^2)  #> - Treatment variable: assigned_treatment  #> - Adjustment variables: age_s  #> - Model fitter type: te_stats_glm_logit  #>   #> Use fit_msm() to fit the outcome model  #>"},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_switch_weight_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set switching weight model — set_switch_weight_model","text":"","code":"set_switch_weight_model(object, numerator, denominator, model_fitter, ...)  # S4 method for class 'trial_sequence' set_switch_weight_model(   object,   numerator,   denominator,   model_fitter,   eligible_wts_0 = NULL,   eligible_wts_1 = NULL )  # S4 method for class 'trial_sequence_ITT' set_switch_weight_model(object, numerator, denominator, model_fitter)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_switch_weight_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set switching weight model — set_switch_weight_model","text":"object trial_sequence object. numerator Right hand side formula numerator model denominator Right hand side formula denominator model model_fitter te_model_fitter object, stats_glm_logit ... arguments used methods. eligible_wts_0 Name column containing indicator (0/1) observation excluded/included weight model. eligible_wts_1 Exclude observations fitting models inverse probability treatment weights. example, assumed individual stay treatment least 2 visits, first 2 visits treatment initiation definition probability staying treatment 1.0 thus excluded weight models treatment immediately previous visit. Users can define variable indicates 2 observations ineligible weight model treatment immediately previous visit add variable name argument eligible_wts_1. Similar definitions applied eligible_wts_0 excluding observations fitting models inverse probability treatment weights treatment immediately previous visit.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_switch_weight_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set switching weight model — set_switch_weight_model","text":"object returned @switch_weights set","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/set_switch_weight_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set switching weight model — set_switch_weight_model","text":"","code":"trial_sequence(\"PP\") |>   set_data(data = data_censored) |>   set_switch_weight_model(     numerator = ~ age_s + x1 + x3,     denominator = ~ x3 + x4,     model_fitter = stats_glm_logit(tempdir())   ) #> Trial Sequence Object  #> Estimand: Per-protocol  #>   #> Data:  #>  - N: 321 observations from 89 patients  #>         id period treatment    x1           x2    x3        x4   age      age_s #>      <int>  <int>     <num> <num>        <num> <int>     <num> <num>      <num> #>   1:     1      0         1     1  1.146148362     0 0.7342030    36 0.08333333 #>   2:     1      1         1     1  0.002200337     0 0.7342030    37 0.16666667 #>  ---                                                                            #> 320:    99      1         1     0 -1.106480738     1 0.5752681    66 2.58333333 #> 321:    99      2         0     0  1.650478074     1 0.5752681    67 2.66666667 #>      outcome censored eligible time_on_regime #>        <num>    <int>    <num>          <num> #>   1:       0        0        1              0 #>   2:       0        0        0              1 #>  ---                                          #> 320:       0        0        0              1 #> 321:       0        0        0              2 #>   #> IPW for informative censoring:  #>  - No weight model specified  #>   #> IPW for treatment switch censoring:  #>  - Numerator formula: treatment ~ age_s + x1 + x3  #>  - Denominator formula: treatment ~ x3 + x4  #>  - Model fitter type: te_stats_glm_logit  #>  - Weight models not fitted. Use calculate_weights()  #>   #> Sequence of Trials Data:  #> - Use set_expansion_options() and expand_trials() to construct the sequence of trials dataset.  #>   #> Outcome model:  #>  - Outcome model not specified. Use set_outcome_model()"},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/show_weight_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Weight Model Summaries — show_weight_models","text":"","code":"show_weight_models(object)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/show_weight_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Weight Model Summaries — show_weight_models","text":"object trial_sequence object fitting weight models calculate_weights()","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/show_weight_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show Weight Model Summaries — show_weight_models","text":"Prints summaries censoring models","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/stats_glm_logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit outcome models using stats::glm — stats_glm_logit","text":"","code":"stats_glm_logit(save_path)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/stats_glm_logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit outcome models using stats::glm — stats_glm_logit","text":"save_path Directory save models. Set NA models saved.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/stats_glm_logit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit outcome models using stats::glm — stats_glm_logit","text":"object class te_stats_glm_logit inheriting te_model_fitter used dispatching methods fitting models.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/stats_glm_logit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit outcome models using stats::glm — stats_glm_logit","text":"Specify pooled logistic regression outcome models fit using stats::glm family = binomial(link = \"logit\"). Outcome models additional calculate robust variance estimates using sandwich::vcovCL.","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/stats_glm_logit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit outcome models using stats::glm — stats_glm_logit","text":"","code":"stats_glm_logit(save_path = tempdir()) #> An object of class \"te_stats_glm_logit\" #> Slot \"save_path\": #> [1] \"/tmp/RtmpGiJAux\" #>"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/summary_TE.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary methods — summary.TE_data_prep","title":"Summary methods — summary.TE_data_prep","text":"Print summaries data model objects produced TrialEmulation.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/summary_TE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary methods — summary.TE_data_prep","text":"","code":"# S3 method for class 'TE_data_prep' summary(object, ...)  # S3 method for class 'TE_data_prep_sep' summary(object, ...)  # S3 method for class 'TE_data_prep_dt' summary(object, ...)  # S3 method for class 'TE_msm' summary(object, ...)  # S3 method for class 'TE_robust' summary(object, ...)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/summary_TE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary methods — summary.TE_data_prep","text":"object Object print summary ... Additional arguments passed print methods.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/summary_TE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary methods — summary.TE_data_prep","text":"value, displays summaries object.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_data-class.html","id":null,"dir":"Reference","previous_headings":"","what":"TrialEmulation Data Class — te_data-class","title":"TrialEmulation Data Class — te_data-class","text":"TrialEmulation Data Class","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_data-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"TrialEmulation Data Class — te_data-class","text":"data data.table object columns \"id\", \"period\", \"treatment\", \"outcome\", \"eligible\"","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_data_ex.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of a prepared data object — te_data_ex","title":"Example of a prepared data object — te_data_ex","text":"small example object data_preparation used examples. created following code:","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_data_ex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of a prepared data object — te_data_ex","text":"","code":"te_data_ex"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_data_ex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of a prepared data object — te_data_ex","text":"object class TE_data_prep_dt (inherits TE_data_prep) length 6.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_data_ex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example of a prepared data object — te_data_ex","text":"","code":"dat <- trial_example[trial_example$id < 200, ]  te_data_ex <- data_preparation( data = dat,  outcome_cov = c(\"nvarA\", \"catvarA\"),  first_period = 260,  last_period = 280 )"},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_datastore-class.html","id":null,"dir":"Reference","previous_headings":"","what":"te_datastore — te_datastore-class","title":"te_datastore — te_datastore-class","text":"parent class classes define expanded trial data stored. define new storage type, new class defined inherits te_datastore. addition, methods save_expanded_data read_expanded_data need defined new class.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_datastore-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"te_datastore — te_datastore-class","text":"'te_datastore' object","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_datastore-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"te_datastore — te_datastore-class","text":"N number observations data. Initially 0.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_datastore_csv-class.html","id":null,"dir":"Reference","previous_headings":"","what":"te_datastore_csv, functions and methods — te_datastore_csv-class","title":"te_datastore_csv, functions and methods — te_datastore_csv-class","text":"method used internally expand_trials save data \"datastore\" defined set_expansion_options.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_datastore_csv-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"te_datastore_csv, functions and methods — te_datastore_csv-class","text":"","code":"# S4 method for class 'te_datastore_csv' save_expanded_data(object, data)  # S4 method for class 'te_datastore_csv' read_expanded_data(object, period = NULL, subset_condition = NULL)  # S4 method for class 'te_datastore_csv' sample_expanded_data(   object,   p_control,   period = NULL,   subset_condition = NULL,   seed )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_datastore_csv-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"te_datastore_csv, functions and methods — te_datastore_csv-class","text":"object object class te_datastore child class. data data frame containing expanded trial data. columns trial_period id present, may used methods save data optimal way, indexes, keys separate files. period integerish vector non-zero length select trial period(s) NULL (default) select files. subset_condition string length 1 NULL (default).","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_datastore_csv-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"te_datastore_csv, functions and methods — te_datastore_csv-class","text":"'te_datastore_csv' object.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_datastore_csv-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"te_datastore_csv, functions and methods — te_datastore_csv-class","text":"path path csv files. files names csv files. template data.frame template.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_datastore_csv-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"te_datastore_csv, functions and methods — te_datastore_csv-class","text":"","code":"temp_dir <- tempfile(\"csv_dir_\") dir.create(temp_dir) datastore <- save_to_csv(temp_dir) data(vignette_switch_data) save_expanded_data(datastore, vignette_switch_data[1:200, ]) #> A TE Datastore CSV object  #> N: 200 observations  #> Periods: 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279  #> Path: /tmp/RtmpGiJAux/csv_dir_3314ec20eea  #> Columns: id, trial_period, followup_time, outcome, weight, treatment, catvarA, catvarB, catvarC, nvarA, nvarB, nvarC, assigned_treatment   # delete after use unlink(temp_dir, recursive = TRUE)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_datastore_duckdb-class.html","id":null,"dir":"Reference","previous_headings":"","what":"te_datastore_duckdb, functions and methods — te_datastore_duckdb-class","title":"te_datastore_duckdb, functions and methods — te_datastore_duckdb-class","text":"method used internally expand_trials save data \"datastore\" defined set_expansion_options.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_datastore_duckdb-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"te_datastore_duckdb, functions and methods — te_datastore_duckdb-class","text":"","code":"# S4 method for class 'te_datastore_duckdb' save_expanded_data(object, data)  # S4 method for class 'te_datastore_duckdb' read_expanded_data(object, period = NULL, subset_condition = NULL)  # S4 method for class 'te_datastore_duckdb' sample_expanded_data(   object,   p_control,   period = NULL,   subset_condition = NULL,   seed )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_datastore_duckdb-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"te_datastore_duckdb, functions and methods — te_datastore_duckdb-class","text":"object object class te_datastore child class. data data frame containing expanded trial data. columns trial_period id present, may used methods save data optimal way, indexes, keys separate files. period integerish vector non-zero length select trial period(s) NULL (default) select files. subset_condition string length 1 NULL (default). p_control Probability selecting control. seed integer seed NULL (default).","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_datastore_duckdb-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"te_datastore_duckdb, functions and methods — te_datastore_duckdb-class","text":"'te_datastore_duckdb' object.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_datastore_duckdb-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"te_datastore_duckdb, functions and methods — te_datastore_duckdb-class","text":"path Path duckdb file containing data. table . con S4 object class duckdb_connection.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_datastore_duckdb-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"te_datastore_duckdb, functions and methods — te_datastore_duckdb-class","text":"","code":"temp_dir <- tempfile(\"csv_dir_\") dir.create(temp_dir) datastore <- save_to_csv(temp_dir) data(vignette_switch_data) save_expanded_data(datastore, vignette_switch_data[1:200, ]) #> A TE Datastore CSV object  #> N: 200 observations  #> Periods: 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279  #> Path: /tmp/RtmpGiJAux/csv_dir_3313c5f60b6  #> Columns: id, trial_period, followup_time, outcome, weight, treatment, catvarA, catvarB, catvarC, nvarA, nvarB, nvarC, assigned_treatment   # delete after use unlink(temp_dir, recursive = TRUE)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_model_ex.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of a fitted marginal structural model object — te_model_ex","title":"Example of a fitted marginal structural model object — te_model_ex","text":"small example object trial_msm used examples. created following code:","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_model_ex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of a fitted marginal structural model object — te_model_ex","text":"","code":"te_model_ex"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_model_ex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of a fitted marginal structural model object — te_model_ex","text":"object class TE_msm length 3.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_model_ex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example of a fitted marginal structural model object — te_model_ex","text":"","code":"te_model_ex <- trial_msm(  data = data_subset,  outcome_cov = c(\"catvarA\", \"nvarA\"),  last_followup = 40,  model_var = \"assigned_treatment\",  include_followup_time = ~followup_time,  include_trial_period = ~trial_period,  use_sample_weights = FALSE,  quiet = TRUE,  glm_function = \"glm\"  )"},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_model_fitter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Outcome Model Fitter Class — te_model_fitter-class","title":"Outcome Model Fitter Class — te_model_fitter-class","text":"virtual class outcome model fitter classes inherit . Objects class exist define outcome models fit. used dispatch internal methods fit_outcome_model, fit_weights_model predict.","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_outcome_data-class.html","id":null,"dir":"Reference","previous_headings":"","what":"TrialEmulation Outcome Data Class — te_outcome_data-class","title":"TrialEmulation Outcome Data Class — te_outcome_data-class","text":"TrialEmulation Outcome Data Class","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_outcome_data-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"TrialEmulation Outcome Data Class — te_outcome_data-class","text":"data data.table object columns \"id\", \"period\", n_rows Number rows n_ids Number IDs periods Vector periods \"treatment\", \"outcome\", \"eligible\"","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_outcome_fitted-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitted Outcome Model Object — te_outcome_fitted-class","title":"Fitted Outcome Model Object — te_outcome_fitted-class","text":"Fitted Outcome Model Object","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_outcome_fitted-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Fitted Outcome Model Object — te_outcome_fitted-class","text":"model list containing fitted model objects. summary list data.frames. Tidy model summaries la broom() glance()","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_outcome_model-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitted Outcome Model Object — te_outcome_model-class","title":"Fitted Outcome Model Object — te_outcome_model-class","text":"Fitted Outcome Model Object","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_outcome_model-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Fitted Outcome Model Object — te_outcome_model-class","text":"formula formula object model fitting adjustment_vars character. Adjustment variables treatment_var Variable used treatment stabilised_weights_terms formula. Adjustment terms numerator models stabilised weights. must included outcome model. adjustment_terms formula. User specified terms include outcome model treatment_terms formula. Estimand defined treatment term followup_time_terms formula. Terms model follow time within emulated trial trial_period_terms formula. Terms model start time (\"trial_period\") emulated trial model_fitter Model fitter object fitted list. Saves model objects","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_parsnip_model-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Models using parsnip — te_parsnip_model-class","title":"Fit Models using parsnip — te_parsnip_model-class","text":"classes (internal) methods defined using parsnip fit weight models.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_parsnip_model-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Models using parsnip — te_parsnip_model-class","text":"","code":"# S4 method for class 'te_parsnip_model' fit_weights_model(object, data, formula, label)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_parsnip_model-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Models using parsnip — te_parsnip_model-class","text":"object object determining method used, containing slots containing user defined parameters. data data.frame containing outcomes covariates defined formula. formula formula describing model. label short string describing model.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_parsnip_model-class.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Fit Models using parsnip — te_parsnip_model-class","text":"fit_weights_model(te_parsnip_model): Fit weight models object via calculate_weights trial_sequence","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_parsnip_model-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Fit Models using parsnip — te_parsnip_model-class","text":"model_spec model specification defined parsnip package.","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_stats_glm_logit-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Models using logistic stats::glm — te_stats_glm_logit-class","title":"Fit Models using logistic stats::glm — te_stats_glm_logit-class","text":"classes (internal) methods defined using stats::glm fit logistic regression models.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_stats_glm_logit-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Models using logistic stats::glm — te_stats_glm_logit-class","text":"","code":"# S4 method for class 'te_stats_glm_logit' fit_weights_model(object, data, formula, label)  # S4 method for class 'te_stats_glm_logit' fit_outcome_model(object, data, formula, weights = NULL)  # S4 method for class 'te_stats_glm_logit_outcome_fitted' predict(   object,   newdata,   predict_times,   conf_int = TRUE,   samples = 100,   type = c(\"cum_inc\", \"survival\") )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_stats_glm_logit-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Models using logistic stats::glm — te_stats_glm_logit-class","text":"object Object dispatch method data data.frame containing outcomes covariates defined formula. formula formula describing model. label short string describing model. weights numeric vector weights. newdata Baseline trial data characterise target trial population marginal cumulative incidences survival probabilities predicted .  newdata must columns formats variables fitted marginal structural model specified trial_msm() initiators(). newdata contains rows followup_time > 0 removed. predict_times Specify follow-visits/times marginal cumulative incidences survival probabilities predicted. conf_int Construct point-wise 95-percent confidence intervals cumulative incidences target trial population treatment non-treatment differences simulating parameters marginal structural model multivariate normal distribution mean equal marginal structural model parameter estimates variance equal estimated robust covariance matrix. samples Number samples used construct simulation-based confidence intervals. type Specify cumulative incidences survival probabilities predicted. Either cumulative incidence (\"cum_inc\") survival probability (\"survival\").","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/te_stats_glm_logit-class.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Fit Models using logistic stats::glm — te_stats_glm_logit-class","text":"fit_weights_model(te_stats_glm_logit): Fit weight models object via calculate_weights trial_sequence fit_outcome_model(te_stats_glm_logit): Fit outcome model object via fit_msm trial_sequence predict(te_stats_glm_logit_outcome_fitted): Predict fitted model object via predict trial_sequence","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/trial_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of longitudinal data for sequential trial emulation — trial_example","title":"Example of longitudinal data for sequential trial emulation — trial_example","text":"dataset containing treatment, outcomes attributes 503 patients sequential trial emulation. See vignette(\"Getting-Started\").","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/trial_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of longitudinal data for sequential trial emulation — trial_example","text":"","code":"trial_example"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/trial_example.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of longitudinal data for sequential trial emulation — trial_example","text":"data frame 48400 rows 11 variables: id patient identifier eligible eligible trial start period, 1=yes, 0=period time period outcome indicator outcome period, 1=event occurred, 0=event treatment indicator receiving treatment period, 1=treatment, 0=treatment catvarA categorical variable relating treatment outcome catvarB categorical variable relating treatment outcome catvarC categorical variable relating treatment outcome nvarA numerical variable relating treatment outcome nvarB numerical variable relating treatment outcome nvarC numerical variable relating treatment outcome","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/trial_msm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the marginal structural model for the sequence of emulated trials — trial_msm","text":"","code":"trial_msm(   data,   outcome_cov = ~1,   estimand_type = c(\"ITT\", \"PP\", \"As-Treated\"),   model_var = NULL,   first_followup = NA,   last_followup = NA,   analysis_weights = c(\"asis\", \"unweighted\", \"p99\", \"weight_limits\"),   weight_limits = c(0, Inf),   include_followup_time = ~followup_time + I(followup_time^2),   include_trial_period = ~trial_period + I(trial_period^2),   where_case = NA,   glm_function = c(\"glm\", \"parglm\"),   use_sample_weights = TRUE,   quiet = FALSE,   ... )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/trial_msm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the marginal structural model for the sequence of emulated trials — trial_msm","text":"data data.frame containing required variables person-time format, .e.,  `long' format. outcome_cov RHS formula baseline covariates adjusted marginal structural model emulated trials. Note time-varying covariate specified outcome_cov, value trial baselines included expanded data. estimand_type Specify estimand causal analyses sequence emulated trials. estimand_type = \"ITT\" perform intention--treat analyses, treatment switching trial baselines ignored. estimand_type = \"PP\" perform per-protocol analyses, individuals' follow-ups artificially censored inverse probability treatment weighting applied. estimand_type = \"-Treated\" fit standard marginal structural model possible treatment sequences, individuals' follow-ups artificially censored  treatment switching trial baselines accounted applying inverse probability treatment weighting. model_var Treatment variables included marginal structural model emulated trials. model_var = \"assigned_treatment\" create variable assigned_treatment assigned treatment trial baseline, typically used ITT per-protocol analyses. model_var = \"dose\" create variable dose cumulative number  treatments received since trial baseline, typically used -treated analyses. first_followup First follow-time/visit trials included marginal structural model outcome event. last_followup Last follow-time/visit trials included marginal structural model outcome event. analysis_weights Choose type weights used fitting marginal structural model outcome event. \"asis\": use weights calculated. \"p99\": use weights truncated 1st 99th percentiles (based distribution weights entire sample). \"weight_limits\": use weights truncated values specified weight_limits. \"unweighted\": set analysis weights 1, even treatment weights censoring weights calculated. weight_limits Lower upper limits truncate weights, given c(lower, upper) include_followup_time model include follow time/visit trial (followup_time) marginal structural model, specified RHS formula. include_trial_period model include trial period (trial_period) marginal structural model, specified RHS formula. where_case Define conditions using variables specified where_var fitting marginal structural model subgroup individuals. example, where_var= \"age\", where_case = \"age >= 30\" fit marginal structural model subgroup individuals. 30 years old . glm_function Specify glm function use marginal structural model stats parglm packages. default function glm function stats package. Users can also specify glm_function = \"parglm\" parglm function parglm package can used fitting generalized linear models parallel. default control setting  parglm nthreads = 4 method = \"FAST\", four cores Fisher information used faster computation. Users can change default control setting passing arguments nthreads method parglm.control function parglm package, alternatively, passing control argument list produced parglm.control(nthreads = , method = ). use_sample_weights Use case-control sampling weights addition inverse probability weights treatment censoring. data must contain column sample_weight. final weights used pooled logistic regression calculated weight = weight * sample_weight. quiet Suppress printing progress messages summaries fitted models. ... Additional arguments passed glm_function. may used specify initial values parameters arguments control. See stats::glm, parglm::parglm parglm::parglm.control() information.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/trial_msm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the marginal structural model for the sequence of emulated trials — trial_msm","text":"Object class TE_msm containing model glm object robust list containing summary table estimated regression coefficients robust covariance matrix args list contain parameters used prepare fit model","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/trial_msm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit the marginal structural model for the sequence of emulated trials — trial_msm","text":"Apply weighted pooled logistic regression fit marginal structural model sequence emulated trials calculates robust covariance matrix  parameter using sandwich estimator. model formula constructed combining arguments outcome_cov, model_var, include_followup_time, include_trial_period.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/trial_sequence-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Trial Sequence class — trial_sequence-class","title":"Trial Sequence class — trial_sequence-class","text":"Trial Sequence class","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/trial_sequence-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Trial Sequence class — trial_sequence-class","text":"data te_data. estimand character. Descriptive name estimand. expansion te_expansion outcome_model te_outcome_model. outcome_data te_outcome_data. censor_weight te_weight. Object define weighting account informative censoring censor_weight te_weight. Object define weighting account informative censoring due treatment switching","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/trial_sequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a sequence of emulated target trials object — trial_sequence","text":"","code":"trial_sequence(estimand, ...)"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/trial_sequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a sequence of emulated target trials object — trial_sequence","text":"estimand name estimand analysis, either one \"ITT\", \"PP\", \"\" intention--treat, per-protocol, -treated estimands respectively, name class extending trial_sequence ... parameters used creating object","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/trial_sequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a sequence of emulated target trials object — trial_sequence","text":"estimand specific trial sequence object","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/trial_sequence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a sequence of emulated target trials object — trial_sequence","text":"","code":"trial_sequence(\"ITT\") #> Trial Sequence Object  #> Estimand: Intention-to-treat  #>   #> Data:  #>  - No data has been set. Use set_data()  #>   #> IPW for informative censoring:  #>  - No weight model specified  #>   #> Outcome model:  #>  - Outcome model not specified. Use set_outcome_model()"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/vignette_switch_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example of expanded longitudinal data for sequential trial emulation — vignette_switch_data","title":"Example of expanded longitudinal data for sequential trial emulation — vignette_switch_data","text":"expanded dataset created vignette(\"Getting-Started\") known switch_data.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/vignette_switch_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example of expanded longitudinal data for sequential trial emulation — vignette_switch_data","text":"","code":"vignette_switch_data"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/vignette_switch_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example of expanded longitudinal data for sequential trial emulation — vignette_switch_data","text":"data frame 1939053 rows 7 variables: id patient identifier trial_period trial start time period followup_time follow time within trial outcome indicator outcome period, 1=event occurred, 0=event treatment indicator receiving treatment period, 1=treatment, 0=non-treatment assigned_treatment indicator assigned treatment baseline trial, 1=treatment, 0=non-treatment weight weights use model fitting catvarA categorical variable relating treatment outcome catvarB categorical variable relating treatment outcome catvarC categorical variable relating treatment outcome nvarA numerical variable relating treatment outcome nvarB numerical variable relating treatment outcome nvarC numerical variable relating treatment outcome","code":""},{"path":[]},{"path":"https://causal-lda.github.io/TrialEmulation/reference/weight_model_data_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data used in weight model fitting — weight_model_data_indices","text":"","code":"weight_model_data_indices(   object,   type = c(\"switch\", \"censor\"),   model,   set_col = NULL )"},{"path":"https://causal-lda.github.io/TrialEmulation/reference/weight_model_data_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data used in weight model fitting — weight_model_data_indices","text":"object trial_sequence object type Select censoring switching model model model name set_col character string specifying new column contain indicators observations used fitting model.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/weight_model_data_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data used in weight model fitting — weight_model_data_indices","text":"set_col specified logical data.table column returned. Otherwise","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/reference/weight_model_data_indices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data used in weight model fitting — weight_model_data_indices","text":"","code":"trial_pp <- trial_sequence(\"PP\") |>   set_data(data_censored) |>   set_switch_weight_model(     numerator = ~age,     denominator = ~ age + x1 + x3,     model_fitter = stats_glm_logit(tempdir())   ) |>   calculate_weights() ipw_data(trial_pp) #> Key: <id> #> Indices: <am_1>, <treatment> #>         id period treatment    x1           x2    x3        x4   age      age_s #>      <int>  <int>     <num> <num>        <num> <int>     <num> <num>      <num> #>   1:     1      0         1     1  1.146148362     0 0.7342030    36 0.08333333 #>   2:     1      1         1     1  0.002200337     0 0.7342030    37 0.16666667 #>   3:     1      2         1     0 -0.481762418     0 0.7342030    38 0.25000000 #>   4:     1      3         1     0  0.007872396     0 0.7342030    39 0.33333333 #>   5:     1      4         1     1  0.216053715     0 0.7342030    40 0.41666667 #>  ---                                                                            #> 317:    98      2         1     0 -0.735240928     0 0.3174175    66 2.58333333 #> 318:    98      3         0     0 -0.425345479     0 0.3174175    67 2.66666667 #> 319:    99      0         1     1 -0.346377841     1 0.5752681    65 2.50000000 #> 320:    99      1         1     0 -1.106480738     1 0.5752681    66 2.58333333 #> 321:    99      2         0     0  1.650478074     1 0.5752681    67 2.66666667 #>      outcome censored eligible time_of_event  first  am_1  cumA switch #>        <num>    <int>    <num>         <num> <lgcl> <num> <num>  <num> #>   1:       0        0        1          9999   TRUE     0     1      0 #>   2:       0        0        0          9999  FALSE     1     2      0 #>   3:       0        0        0          9999  FALSE     1     3      0 #>   4:       0        0        0          9999  FALSE     1     4      0 #>   5:       0        0        0          9999  FALSE     1     5      0 #>  ---                                                                   #> 317:       0        0        0            14  FALSE     1     3      0 #> 318:       0        0        0            14  FALSE     1     3      1 #> 319:       0        0        1             7   TRUE     0     1      0 #> 320:       0        0        0             7  FALSE     1     2      0 #> 321:       0        0        0             7  FALSE     1     2      1 #>      regime_start time_on_regime eligible0 eligible1        wt       p_n #>             <int>          <num>     <num>     <num>     <num>     <num> #>   1:            0              0         1         0 0.7964844 0.4706283 #>   2:            0              1         0         1 0.9274210 0.7174218 #>   3:            0              2         0         1 1.0750073 0.7126312 #>   4:            0              3         0         1 1.0761263 0.7077924 #>   5:            0              4         0         1 0.9234340 0.7029062 #>  ---                                                                     #> 317:            0              2         0         1 1.1082753 0.5621482 #> 318:            3              3         0         1 0.8898716 0.5563530 #> 319:            0              0         1         0 0.8816779 0.2512156 #> 320:            0              1         0         1 1.0034178 0.5621482 #> 321:            2              2         0         1 0.9959067 0.5563530 #>            p_d       wtS #>          <num>     <num> #>   1: 0.5908820 0.7964844 #>   2: 0.7735665 0.9274210 #>   3: 0.6629082 1.0750073 #>   4: 0.6577225 1.0761263 #>   5: 0.7611872 0.9234340 #>  ---                     #> 317: 0.5072279 1.1082753 #> 318: 0.5014484 0.8898716 #> 319: 0.2849290 0.8816779 #> 320: 0.5602335 1.0034178 #> 321: 0.5545296 0.9959067 show_weight_models(trial_pp) #> Weight Models for Informative Censoring #> --------------------------------------- #>  #> Weight Models for Treatment Switching #> ------------------------------------- #>  #> [[n1]] #> Model: P(treatment = 1 | previous treatment = 1) for numerator  #>   #>  term        estimate    std.error  statistic p.value    #>  (Intercept)  1.80162178 0.77463133  2.325780 0.02003031 #>  age         -0.02351116 0.01691961 -1.389581 0.16465623 #>   #>  null.deviance df.null logLik    AIC      BIC      deviance df.residual nobs #>  188.829       150     -93.43779 190.8756 196.9101 186.8756 149         151  #>   #>  path                                  #>  /tmp/RtmpGiJAux/model_3311befacbe.rds #>   #> [[d1]] #> Model: P(treatment = 1 | previous treatment = 1) for denominator  #>   #>  term        estimate    std.error  statistic  p.value    #>  (Intercept)  1.55485166 0.81706997  1.9029602 0.05704573 #>  age         -0.02312027 0.01696843 -1.3625460 0.17302562 #>  x1           0.52915871 0.43594855  1.2138100 0.22482028 #>  x3           0.21319587 0.35744378  0.5964459 0.55087740 #>   #>  null.deviance df.null logLik    AIC      BIC      deviance df.residual nobs #>  188.829       150     -92.54787 193.0957 205.1649 185.0957 147         151  #>   #>  path                                 #>  /tmp/RtmpGiJAux/model_33166676bb.rds #>   #> [[n0]] #> Model: P(treatment = 1 | previous treatment = 0) for numerator  #>   #>  term        estimate    std.error  statistic p.value    #>  (Intercept)  1.09212298 0.60582678  1.802698 0.07143559 #>  age         -0.03360404 0.01439482 -2.334453 0.01957201 #>   #>  null.deviance df.null logLik    AIC      BIC      deviance df.residual nobs #>  232.2705      169     -113.2746 230.5492 236.8208 226.5492 168         170  #>   #>  path                                  #>  /tmp/RtmpGiJAux/model_33110a6c97e.rds #>   #> [[d0]] #> Model: P(treatment = 1 | previous treatment = 0) for denominator  #>   #>  term        estimate    std.error  statistic  p.value    #>  (Intercept)  1.03084683 0.63052714  1.6348969 0.10207067 #>  age         -0.03633255 0.01472576 -2.4672779 0.01361446 #>  x1           0.64473751 0.32346837  1.9932011 0.04623943 #>  x3          -0.23411026 0.32147930 -0.7282281 0.46647397 #>   #>  null.deviance df.null logLik  AIC    BIC      deviance df.residual nobs #>  232.2705      169     -111.03 230.06 242.6032 222.06   166         170  #>   #>  path                                  #>  /tmp/RtmpGiJAux/model_3316cb68e25.rds #>    # get logical column for own processing i <- weight_model_data_indices(trial_pp, \"switch\", \"d0\")  # set column in data weight_model_data_indices(trial_pp, \"switch\", \"d0\", set_col = \"sw_d0\") #> Key: <id> #> Indices: <am_1>, <treatment> #>         id period treatment    x1           x2    x3        x4   age      age_s #>      <int>  <int>     <num> <num>        <num> <int>     <num> <num>      <num> #>   1:     1      0         1     1  1.146148362     0 0.7342030    36 0.08333333 #>   2:     1      1         1     1  0.002200337     0 0.7342030    37 0.16666667 #>   3:     1      2         1     0 -0.481762418     0 0.7342030    38 0.25000000 #>   4:     1      3         1     0  0.007872396     0 0.7342030    39 0.33333333 #>   5:     1      4         1     1  0.216053715     0 0.7342030    40 0.41666667 #>  ---                                                                            #> 317:    98      2         1     0 -0.735240928     0 0.3174175    66 2.58333333 #> 318:    98      3         0     0 -0.425345479     0 0.3174175    67 2.66666667 #> 319:    99      0         1     1 -0.346377841     1 0.5752681    65 2.50000000 #> 320:    99      1         1     0 -1.106480738     1 0.5752681    66 2.58333333 #> 321:    99      2         0     0  1.650478074     1 0.5752681    67 2.66666667 #>      outcome censored eligible time_of_event  first  am_1  cumA switch #>        <num>    <int>    <num>         <num> <lgcl> <num> <num>  <num> #>   1:       0        0        1          9999   TRUE     0     1      0 #>   2:       0        0        0          9999  FALSE     1     2      0 #>   3:       0        0        0          9999  FALSE     1     3      0 #>   4:       0        0        0          9999  FALSE     1     4      0 #>   5:       0        0        0          9999  FALSE     1     5      0 #>  ---                                                                   #> 317:       0        0        0            14  FALSE     1     3      0 #> 318:       0        0        0            14  FALSE     1     3      1 #> 319:       0        0        1             7   TRUE     0     1      0 #> 320:       0        0        0             7  FALSE     1     2      0 #> 321:       0        0        0             7  FALSE     1     2      1 #>      regime_start time_on_regime eligible0 eligible1        wt       p_n #>             <int>          <num>     <num>     <num>     <num>     <num> #>   1:            0              0         1         0 0.7964844 0.4706283 #>   2:            0              1         0         1 0.9274210 0.7174218 #>   3:            0              2         0         1 1.0750073 0.7126312 #>   4:            0              3         0         1 1.0761263 0.7077924 #>   5:            0              4         0         1 0.9234340 0.7029062 #>  ---                                                                     #> 317:            0              2         0         1 1.1082753 0.5621482 #> 318:            3              3         0         1 0.8898716 0.5563530 #> 319:            0              0         1         0 0.8816779 0.2512156 #> 320:            0              1         0         1 1.0034178 0.5621482 #> 321:            2              2         0         1 0.9959067 0.5563530 #>            p_d       wtS  sw_d0 #>          <num>     <num> <lgcl> #>   1: 0.5908820 0.7964844   TRUE #>   2: 0.7735665 0.9274210  FALSE #>   3: 0.6629082 1.0750073  FALSE #>   4: 0.6577225 1.0761263  FALSE #>   5: 0.7611872 0.9234340  FALSE #>  ---                            #> 317: 0.5072279 1.1082753  FALSE #> 318: 0.5014484 0.8898716  FALSE #> 319: 0.2849290 0.8816779   TRUE #> 320: 0.5602335 1.0034178  FALSE #> 321: 0.5545296 0.9959067  FALSE weight_model_data_indices(trial_pp, \"switch\", \"d1\", set_col = \"sw_d1\") #> Key: <id> #> Indices: <am_1>, <treatment> #>         id period treatment    x1           x2    x3        x4   age      age_s #>      <int>  <int>     <num> <num>        <num> <int>     <num> <num>      <num> #>   1:     1      0         1     1  1.146148362     0 0.7342030    36 0.08333333 #>   2:     1      1         1     1  0.002200337     0 0.7342030    37 0.16666667 #>   3:     1      2         1     0 -0.481762418     0 0.7342030    38 0.25000000 #>   4:     1      3         1     0  0.007872396     0 0.7342030    39 0.33333333 #>   5:     1      4         1     1  0.216053715     0 0.7342030    40 0.41666667 #>  ---                                                                            #> 317:    98      2         1     0 -0.735240928     0 0.3174175    66 2.58333333 #> 318:    98      3         0     0 -0.425345479     0 0.3174175    67 2.66666667 #> 319:    99      0         1     1 -0.346377841     1 0.5752681    65 2.50000000 #> 320:    99      1         1     0 -1.106480738     1 0.5752681    66 2.58333333 #> 321:    99      2         0     0  1.650478074     1 0.5752681    67 2.66666667 #>      outcome censored eligible time_of_event  first  am_1  cumA switch #>        <num>    <int>    <num>         <num> <lgcl> <num> <num>  <num> #>   1:       0        0        1          9999   TRUE     0     1      0 #>   2:       0        0        0          9999  FALSE     1     2      0 #>   3:       0        0        0          9999  FALSE     1     3      0 #>   4:       0        0        0          9999  FALSE     1     4      0 #>   5:       0        0        0          9999  FALSE     1     5      0 #>  ---                                                                   #> 317:       0        0        0            14  FALSE     1     3      0 #> 318:       0        0        0            14  FALSE     1     3      1 #> 319:       0        0        1             7   TRUE     0     1      0 #> 320:       0        0        0             7  FALSE     1     2      0 #> 321:       0        0        0             7  FALSE     1     2      1 #>      regime_start time_on_regime eligible0 eligible1        wt       p_n #>             <int>          <num>     <num>     <num>     <num>     <num> #>   1:            0              0         1         0 0.7964844 0.4706283 #>   2:            0              1         0         1 0.9274210 0.7174218 #>   3:            0              2         0         1 1.0750073 0.7126312 #>   4:            0              3         0         1 1.0761263 0.7077924 #>   5:            0              4         0         1 0.9234340 0.7029062 #>  ---                                                                     #> 317:            0              2         0         1 1.1082753 0.5621482 #> 318:            3              3         0         1 0.8898716 0.5563530 #> 319:            0              0         1         0 0.8816779 0.2512156 #> 320:            0              1         0         1 1.0034178 0.5621482 #> 321:            2              2         0         1 0.9959067 0.5563530 #>            p_d       wtS  sw_d0  sw_d1 #>          <num>     <num> <lgcl> <lgcl> #>   1: 0.5908820 0.7964844   TRUE  FALSE #>   2: 0.7735665 0.9274210  FALSE   TRUE #>   3: 0.6629082 1.0750073  FALSE   TRUE #>   4: 0.6577225 1.0761263  FALSE   TRUE #>   5: 0.7611872 0.9234340  FALSE   TRUE #>  ---                                   #> 317: 0.5072279 1.1082753  FALSE   TRUE #> 318: 0.5014484 0.8898716  FALSE   TRUE #> 319: 0.2849290 0.8816779   TRUE  FALSE #> 320: 0.5602335 1.0034178  FALSE   TRUE #> 321: 0.5545296 0.9959067  FALSE   TRUE ipw_data(trial_pp) #> Key: <id> #> Indices: <am_1>, <treatment> #>         id period treatment    x1           x2    x3        x4   age      age_s #>      <int>  <int>     <num> <num>        <num> <int>     <num> <num>      <num> #>   1:     1      0         1     1  1.146148362     0 0.7342030    36 0.08333333 #>   2:     1      1         1     1  0.002200337     0 0.7342030    37 0.16666667 #>   3:     1      2         1     0 -0.481762418     0 0.7342030    38 0.25000000 #>   4:     1      3         1     0  0.007872396     0 0.7342030    39 0.33333333 #>   5:     1      4         1     1  0.216053715     0 0.7342030    40 0.41666667 #>  ---                                                                            #> 317:    98      2         1     0 -0.735240928     0 0.3174175    66 2.58333333 #> 318:    98      3         0     0 -0.425345479     0 0.3174175    67 2.66666667 #> 319:    99      0         1     1 -0.346377841     1 0.5752681    65 2.50000000 #> 320:    99      1         1     0 -1.106480738     1 0.5752681    66 2.58333333 #> 321:    99      2         0     0  1.650478074     1 0.5752681    67 2.66666667 #>      outcome censored eligible time_of_event  first  am_1  cumA switch #>        <num>    <int>    <num>         <num> <lgcl> <num> <num>  <num> #>   1:       0        0        1          9999   TRUE     0     1      0 #>   2:       0        0        0          9999  FALSE     1     2      0 #>   3:       0        0        0          9999  FALSE     1     3      0 #>   4:       0        0        0          9999  FALSE     1     4      0 #>   5:       0        0        0          9999  FALSE     1     5      0 #>  ---                                                                   #> 317:       0        0        0            14  FALSE     1     3      0 #> 318:       0        0        0            14  FALSE     1     3      1 #> 319:       0        0        1             7   TRUE     0     1      0 #> 320:       0        0        0             7  FALSE     1     2      0 #> 321:       0        0        0             7  FALSE     1     2      1 #>      regime_start time_on_regime eligible0 eligible1        wt       p_n #>             <int>          <num>     <num>     <num>     <num>     <num> #>   1:            0              0         1         0 0.7964844 0.4706283 #>   2:            0              1         0         1 0.9274210 0.7174218 #>   3:            0              2         0         1 1.0750073 0.7126312 #>   4:            0              3         0         1 1.0761263 0.7077924 #>   5:            0              4         0         1 0.9234340 0.7029062 #>  ---                                                                     #> 317:            0              2         0         1 1.1082753 0.5621482 #> 318:            3              3         0         1 0.8898716 0.5563530 #> 319:            0              0         1         0 0.8816779 0.2512156 #> 320:            0              1         0         1 1.0034178 0.5621482 #> 321:            2              2         0         1 0.9959067 0.5563530 #>            p_d       wtS  sw_d0  sw_d1 #>          <num>     <num> <lgcl> <lgcl> #>   1: 0.5908820 0.7964844   TRUE  FALSE #>   2: 0.7735665 0.9274210  FALSE   TRUE #>   3: 0.6629082 1.0750073  FALSE   TRUE #>   4: 0.6577225 1.0761263  FALSE   TRUE #>   5: 0.7611872 0.9234340  FALSE   TRUE #>  ---                                   #> 317: 0.5072279 1.1082753  FALSE   TRUE #> 318: 0.5014484 0.8898716  FALSE   TRUE #> 319: 0.2849290 0.8816779   TRUE  FALSE #> 320: 0.5602335 1.0034178  FALSE   TRUE #> 321: 0.5545296 0.9959067  FALSE   TRUE"},{"path":"https://causal-lda.github.io/TrialEmulation/news/index.html","id":"trialemulation-0041","dir":"Changelog","previous_headings":"","what":"TrialEmulation 0.0.4.1","title":"TrialEmulation 0.0.4.1","text":"Update tests duckdb 1.2.0 changes sampling.","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/news/index.html","id":"trialemulation-0040","dir":"Changelog","previous_headings":"","what":"TrialEmulation 0.0.4.0","title":"TrialEmulation 0.0.4.0","text":"CRAN release: 2024-11-29 Step--step functions construct sequence target trial analysis. See “New Interface”” vignette. Possibility add alternative data storage model fitting functionality. See “Extending TrialEmulation” vignette. Use duckdb store expanded data efficient reading sampling large data. Use parsnip models weight model fitting (experimental, recommended). interface still “experimental” may change future Thanks @darkgoldenrod-cherry","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/news/index.html","id":"trialemulation-0039","dir":"Changelog","previous_headings":"","what":"TrialEmulation 0.0.3.9","title":"TrialEmulation 0.0.3.9","text":"CRAN release: 2024-09-09 Improved documentation Add estimand_type argument Fix partial matching data.table calls. Thanks @joshhwuu Additional internal refactoring","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/news/index.html","id":"trialemulation-0032","dir":"Changelog","previous_headings":"","what":"TrialEmulation 0.0.3.2","title":"TrialEmulation 0.0.3.2","text":"CRAN release: 2023-08-25 Initial release CRAN","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/news/index.html","id":"trialemulation-002x","dir":"Changelog","previous_headings":"","what":"TrialEmulation 0.0.2.x","title":"TrialEmulation 0.0.2.x","text":"feature development code improvement Implemented case-control sampling Implemented predict() method Package tests CI pipeline github","code":""},{"path":"https://causal-lda.github.io/TrialEmulation/news/index.html","id":"trialemulation-001","dir":"Changelog","previous_headings":"","what":"TrialEmulation 0.0.1","title":"TrialEmulation 0.0.1","text":"Initial development Roonak Rezvani internship project Data preparation model fitting functions sequence target trials Support large data using biglm, data.table chunked processing","code":""}]
